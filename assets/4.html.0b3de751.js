import{d as n}from"./app.b87228d2.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h3 id="_4\u3001\u624B\u5199-promise-all" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u624B\u5199-promise-all" aria-hidden="true">#</a> 4\u3001\u624B\u5199 Promise.all</h3><p>Promise.all \u7684\u5B8C\u6210\u4F53\u5E94\u8BE5\u7B26\u5408\u4EE5\u4E0B\u7279\u5F81\uFF1A</p><ul><li>\u8F93\u5165\u4E3A Iterator \u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u53EF\u4EE5\u662F Array\uFF0CMap\uFF0C Set\uFF0CString \uFF0C\u53EF\u80FD\u4E5F\u5F97\u5305\u62EC\u9B54\u6539\u7684 Iterator\uFF08Symbol.iterator\uFF09\u4E4B\u7C7B</li><li>\u82E5\u8F93\u5165\u7684\u53EF\u8FED\u4EE3\u6570\u636E\u91CC\u4E0D\u662F Promise\uFF0C\u5219\u4E5F\u9700\u8981\u539F\u6837\u8F93\u51FA</li><li>\u8FD4\u56DE\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u8C03\u7528 then \u548C catch \u65B9\u6CD5</li><li>\u8F93\u51FA\u5728 then \u91CC\u4F53\u73B0\u4E3A\u4FDD\u6301\u539F\u987A\u5E8F\u7684\u6570\u7EC4</li><li>\u8F93\u51FA\u5728 catch \u4F53\u73B0\u4E3A\u6700\u65E9\u7684 reject \u8FD4\u56DE\u503C</li><li>\u7A7A Iterator\uFF0C resolve \u8FD4\u56DE\u7A7A\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8F93\u5165\u4E0D\u4EC5\u4EC5\u53EA\u6709Array</span>
<span class="token keyword">function</span> <span class="token function">promiseAll</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> promiseResults <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">let</span> iteratorIndex <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token comment">// \u5DF2\u5B8C\u6210\u7684\u6570\u91CF\uFF0C\u7528\u4E8E\u6700\u7EC8\u7684\u8FD4\u56DE\uFF0C\u4E0D\u80FD\u76F4\u63A5\u7528\u5B8C\u6210\u6570\u91CF\u4F5C\u4E3AiteratorIndex</span>
        <span class="token comment">// \u8F93\u51FA\u987A\u5E8F\u548C\u5B8C\u6210\u987A\u5E8F\u662F\u4E24\u7801\u4E8B</span>
        <span class="token keyword">let</span> fullCount <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token comment">// \u7528\u4E8E\u8FED\u4EE3iterator\u6570\u636E</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// for of \u904D\u5386\u987A\u5E8F\uFF0C\u7528\u4E8E\u8FD4\u56DE\u6B63\u786E\u987A\u5E8F\u7684\u7ED3\u679C</span>
            <span class="token comment">// \u56E0iterator\u7528forEach\u904D\u5386\u540E\u7684key\u548Cvalue\u4E00\u6837\uFF0C\u6240\u4EE5\u5FC5\u987B\u5B58\u4E00\u4EFDfor of\u7684 iteratorIndex</span>
            <span class="token keyword">let</span> resultIndex <span class="token operator">=</span> iteratorIndex
            iteratorIndex <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token comment">// \u5305\u4E00\u5C42\uFF0C\u4EE5\u517C\u5BB9\u975Epromise\u7684\u60C5\u51B5</span>
            Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    promiseResults<span class="token punctuation">[</span>resultIndex<span class="token punctuation">]</span> <span class="token operator">=</span> res
                    fullCount <span class="token operator">+=</span> <span class="token number">1</span>
                    <span class="token comment">// Iterator \u63A5\u53E3\u7684\u6570\u636E\u65E0\u6CD5\u5355\u7EAF\u7684\u7528length\u548Csize\u5224\u65AD\u957F\u5EA6\uFF0C\u4E0D\u80FD\u5C40\u9650\u4E8EArray\u548C Map\u7C7B\u578B\u4E2D</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fullCount <span class="token operator">===</span> iteratorIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span>promiseResults<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5904\u7406\u7A7A iterator \u7684\u60C5\u51B5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>iteratorIndex <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>promiseResults<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Promise<span class="token punctuation">.</span>all<span class="token punctuation">)</span> Promise<span class="token punctuation">.</span>all <span class="token operator">=</span> promiseAll
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div>`,4);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};

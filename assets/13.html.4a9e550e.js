import{r as e,o,c,a as n,b as p,F as l,e as s,d as t}from"./app.b87228d2.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h2",{id:"\u6B7B\u78D5-36-\u4E2A-js-\u624B\u5199\u9898-\u641E\u61C2\u540E-\u63D0\u5347\u771F\u7684\u5927",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6B7B\u78D5-36-\u4E2A-js-\u624B\u5199\u9898-\u641E\u61C2\u540E-\u63D0\u5347\u771F\u7684\u5927","aria-hidden":"true"},"#"),s(" \u6B7B\u78D5 36 \u4E2A JS \u624B\u5199\u9898\uFF08\u641E\u61C2\u540E\uFF0C\u63D0\u5347\u771F\u7684\u5927\uFF09")],-1),k=n("p",null,[n("strong",null,"\u4E3A\u4EC0\u4E48\u8981\u5199\u8FD9\u7C7B\u6587\u7AE0")],-1),b=n("p",null,"\u4F5C\u4E3A\u4E00\u4E2A\u7A0B\u5E8F\u5458\uFF0C\u4EE3\u7801\u80FD\u529B\u6BCB\u5EB8\u7F6E\u7591\u662F\u975E\u5E38\u975E\u5E38\u91CD\u8981\u7684\uFF0C\u5C31\u50CF\u73B0\u5728\u4E3A\u4EC0\u4E48\u5927\u5382\u9762\u8BD5\u57FA\u672C\u90FD\u95EE\u4EC0\u4E48 API \u600E\u4E48\u5B9E\u73B0\u53EF\u89C1\u5176\u91CD\u8981\u6027\u3002\u6211\u60F3\u8BF4\u7684\u662F\u5C45\u7136\u624B\u5199\u8FD9\u4E48\u91CD\u8981\uFF0C\u90A3\u6211\u4EEC\u5C31\u5FC5\u987B\u638C\u63E1\u5B83\uFF0C\u6240\u4EE5\u6587\u7AE0\u6807\u9898\u7528\u4E86\u6B7B\u78D5\uFF0C\u4E00\u70B9\u4E5F\u4E0D\u8FC7\u5206\uFF0C\u4E5F\u5E0C\u671B\u4E0D\u88AB\u8BA4\u4E3A\u662F\u6807\u9898\u515A\u3002",-1),m=s("\u4F5C\u4E3A\u4E00\u4E2A\u666E\u901A\u524D\u7AEF\uFF0C\u6211\u662F\u771F\u7684\u5199\u4E0D\u51FA Promise A+ \u89C4\u8303\uFF0C\u4F46\u662F\u6CA1\u5173\u7CFB\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7AD9\u5728\u5DE8\u4EBA\u7684\u80A9\u8180\u4E0A\uFF0C\u8981\u76F8\u4FE1\u6211\u4EEC\u73B0\u5728\u8981\u8D70\u7684\u8DEF\uFF0C\u524D\u4EBA\u90FD\u8D70\u8FC7\uFF0C\u6240\u4EE5\u53EF\u4EE5\u627E\u627E\u73B0\u5728\u793E\u533A\u5DF2\u7ECF\u5B58\u5728\u7684\u90A3\u4E9B\u4F18\u79C0\u7684\u6587\u7AE0\uFF0C\u6BD4\u5982\u5DE5\u4E1A\u805A\u5927\u4F6C\u5199\u7684 "),d={href:"https://link.juejin.cn/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FqdJ0Xd8zTgtetFdlJL3P1g",title:"https://mp.weixin.qq.com/s/qdJ0Xd8zTgtetFdlJL3P1g",target:"_blank",rel:"noopener noreferrer"},g=s("100 \u884C\u4EE3\u7801\u5B9E\u73B0 Promises/A+ \u89C4\u8303"),f=s("\uFF0C\u627E\u5230\u8FD9\u4E9B\u6587\u7AE0\u540E\u4E0D\u662F\u6536\u85CF\u5939\u5403\u7070\uFF0C\u5F97\u627E\u4E2A\u65F6\u95F4\u8E0F\u8E0F\u5B9E\u5B9E\u7684\u5B66\uFF0C\u4E00\u884C\u4E00\u884C\u7684\u78E8\uFF0C\u76F4\u5230\u641E\u61C2\u4E3A\u6B62\u3002\u6211\u73B0\u5728\u5C31\u662F\u8FD9\u4E48\u5E72\u7684\u3002"),y=t(`<p><strong>\u80FD\u6536\u83B7\u4EC0\u4E48</strong></p><p>\u8FD9\u7BC7\u6587\u7AE0\u603B\u4F53\u4E0A\u5206\u4E3A 2 \u7C7B\u624B\u5199\u9898\uFF0C\u524D\u534A\u90E8\u5206\u53EF\u4EE5\u5F52\u7EB3\u4E3A\u662F\u5E38\u89C1\u9700\u6C42\uFF0C\u540E\u534A\u90E8\u5206\u5219\u662F\u5BF9\u73B0\u6709\u6280\u672F\u7684\u5B9E\u73B0\uFF1B</p><ul><li>\u5BF9\u5E38\u7528\u7684\u9700\u6C42\u8FDB\u884C\u624B\u5199\u5B9E\u73B0\uFF0C\u6BD4\u5982\u6570\u636E\u7C7B\u578B\u5224\u65AD\u51FD\u6570\u3001\u6DF1\u62F7\u8D1D\u7B49\u53EF\u4EE5\u76F4\u63A5\u7528\u4E8E\u5F80\u540E\u7684\u9879\u76EE\u4E2D\uFF0C\u63D0\u9AD8\u4E86\u9879\u76EE\u5F00\u53D1\u6548\u7387\uFF1B</li><li>\u5BF9\u73B0\u6709\u5173\u952E\u5B57\u548C API \u7684\u5B9E\u73B0\uFF0C\u53EF\u80FD\u9700\u8981\u7528\u5230\u522B\u7684\u77E5\u8BC6\u6216 API\uFF0C\u6BD4\u5982\u5728\u5199 forEach \u7684\u65F6\u5019\u7528\u5230\u4E86\u65E0\u7B26\u53F7\u4F4D\u53F3\u79FB\u7684\u64CD\u4F5C\uFF0C\u5E73\u65F6\u90FD\u4E0D\u600E\u4E48\u80FD\u591F\u63A5\u89E6\u5230\u8FD9\u73A9\u610F\uFF0C\u73B0\u5728\u9047\u5230\u4E86\u5C31\u53EF\u4EE5\u987A\u624B\u628A\u5B83\u638C\u63E1\u4E86\u3002\u6240\u4EE5\u624B\u5199\u8FD9\u4E9B\u5B9E\u73B0\u80FD\u591F\u6F5C\u79FB\u9ED8\u5316\u7684\u6269\u5C55\u5E76\u5DE9\u56FA\u81EA\u5DF1\u7684 JS \u57FA\u7840\uFF1B</li><li>\u901A\u8FC7\u5199\u5404\u79CD\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u4F60\u4F1A\u77E5\u9053\u5404\u79CD API \u7684\u8FB9\u754C\u60C5\u51B5\uFF0C\u6BD4\u5982 Promise.all\uFF0C \u4F60\u5F97\u8003\u8651\u5230\u4F20\u5165\u53C2\u6570\u7684\u5404\u79CD\u60C5\u51B5\uFF0C\u4ECE\u800C\u52A0\u6DF1\u4E86\u5BF9\u5B83\u4EEC\u7684\u7406\u89E3\u53CA\u4F7F\u7528\uFF1B</li></ul><p><strong>\u9605\u8BFB\u7684\u65F6\u5019\u9700\u8981\u505A\u4EC0\u4E48</strong></p><p>\u9605\u8BFB\u7684\u65F6\u5019\uFF0C\u4F60\u9700\u8981\u628A\u6BCF\u884C\u4EE3\u7801\u90FD\u770B\u61C2\uFF0C\u77E5\u9053\u5B83\u5728\u5E72\u4EC0\u4E48\uFF0C\u4E3A\u4EC0\u4E48\u8981\u8FD9\u4E48\u5199\uFF0C\u80FD\u5199\u5F97\u66F4\u597D\u561B\uFF1F\u6BD4\u5982\u5728\u5199\u56FE\u7247\u61D2\u52A0\u8F7D\u7684\u65F6\u5019\uFF0C\u4E00\u822C\u6211\u4EEC\u90FD\u662F\u6839\u636E\u5F53\u524D\u5143\u7D20\u7684\u4F4D\u7F6E\u548C\u89C6\u53E3\u8FDB\u884C\u5224\u65AD\u662F\u5426\u8981\u52A0\u8F7D\u8FD9\u5F20\u56FE\u7247\uFF0C\u666E\u901A\u7A0B\u5E8F\u5458\u5199\u5230\u8FD9\u5C31\u5DEE\u4E0D\u591A\u5B8C\u6210\u4E86\u3002\u800C\u5927\u4F6C\u7A0B\u5E8F\u5458\u5219\u662F\u4F1A\u591A\u8003\u8651\u4E00\u4E9B\u7EC6\u8282\u7684\u4E1C\u897F\uFF0C\u6BD4\u5982\u6027\u80FD\u5982\u4F55\u66F4\u4F18\uFF1F\u4EE3\u7801\u5982\u4F55\u66F4\u7CBE\u7B80\uFF1F\u6BD4\u5982 yeyan1996 \u5199\u7684\u56FE\u7247\u61D2\u52A0\u8F7D\u5C31\u591A\u8003\u8651\u4E86 2 \u70B9\uFF1A\u6BD4\u5982\u56FE\u7247\u5168\u90E8\u52A0\u8F7D\u5B8C\u6210\u7684\u65F6\u5019\u5F97\u628A\u4E8B\u4EF6\u76D1\u542C\u7ED9\u79FB\u9664\uFF1B\u6BD4\u5982\u52A0\u8F7D\u5B8C\u4E00\u5F20\u56FE\u7247\u7684\u65F6\u5019\uFF0C\u5F97\u628A\u5F53\u524D img \u4ECE imgList \u91CC\u79FB\u9664\uFF0C\u8D77\u5230\u4F18\u5316\u5185\u5B58\u7684\u4F5C\u7528\u3002</p><p>\u9664\u4E86\u8BFB\u901A\u4EE3\u7801\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u6253\u5F00 Chrome \u7684 Script snippet \u53BB\u5199\u6D4B\u8BD5\u7528\u4F8B\u8DD1\u8DD1\u4EE3\u7801\uFF0C\u505A\u5230\u66F4\u597D\u7684\u7406\u89E3\u4EE5\u53CA\u4F7F\u7528\u3002</p><p>\u5728\u770B\u4E86\u51E0\u7BC7\u4EE5\u53CA\u5199\u4E86\u5F88\u591A\u6D4B\u8BD5\u7528\u4F8B\u7684\u524D\u63D0\u4E0B\uFF0C\u5C1D\u8BD5\u81EA\u5DF1\u624B\u5199\u5B9E\u73B0\uFF0C\u770B\u770B\u81EA\u5DF1\u5230\u5E95\u638C\u63E1\u4E86\u591A\u5C11\u3002\u6761\u6761\u5927\u8DEF\u901A\u7F57\u9A6C\uFF0C\u4F60\u8FD8\u80FD\u6709\u522B\u7684\u65B9\u5F0F\u5B9E\u73B0\u561B\uFF1F\u6216\u8005\u4F60\u80FD\u5199\u5F97\u6BD4\u522B\u4EBA\u66F4\u597D\u561B\uFF1F</p><p>\u597D\u4E86\uFF0C\u8FD8\u695E\u7740\u5E72\u5565\uFF0C\u5F00\u59CB\u5E72\u6D3B\u3002</p><h2 id="\u6570\u636E\u7C7B\u578B\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B\u5224\u65AD" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B\u5224\u65AD</h2><p>typeof \u53EF\u4EE5\u6B63\u786E\u8BC6\u522B\uFF1AUndefined\u3001Boolean\u3001Number\u3001String\u3001Symbol\u3001Function \u7B49\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4F46\u662F\u5BF9\u4E8E\u5176\u4ED6\u7684\u90FD\u4F1A\u8BA4\u4E3A\u662F object\uFF0C\u6BD4\u5982 Null\u3001Date \u7B49\uFF0C\u6240\u4EE5\u901A\u8FC7 typeof \u6765\u5224\u65AD\u6570\u636E\u7C7B\u578B\u4F1A\u4E0D\u51C6\u786E\u3002\u4F46\u662F\u53EF\u4EE5\u4F7F\u7528 Object.prototype.toString \u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">-</span>   <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">-</span>   res <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">-</span>   <span class="token keyword">return</span> res
<span class="token comment">// \u8BC4\u8BBA\u533A\u91CC\u63D0\u5230\u7684\u66F4\u597D\u7684\u5199\u6CD5</span>
<span class="token operator">+</span>   <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">// &#39;array&#39;</span>
<span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment">// &#39;object&#39;</span>
<span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span>  <span class="token comment">// &#39;date&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u7EE7\u627F" aria-hidden="true">#</a> \u7EE7\u627F</h2><h3 id="\u539F\u578B\u94FE\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u94FE\u7EE7\u627F" aria-hidden="true">#</a> \u539F\u578B\u94FE\u7EE7\u627F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getColor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>colors
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> dog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
dog1<span class="token punctuation">.</span>colors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;brown&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> dog2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dog2<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token comment">// [&#39;black&#39;, &#39;white&#39;, &#39;brown&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u539F\u578B\u94FE\u7EE7\u627F\u5B58\u5728\u7684\u95EE\u9898\uFF1A</p><ul><li>\u95EE\u9898 1\uFF1A\u539F\u578B\u4E2D\u5305\u542B\u7684\u5F15\u7528\u7C7B\u578B\u5C5E\u6027\u5C06\u88AB\u6240\u6709\u5B9E\u4F8B\u5171\u4EAB\uFF1B</li><li>\u95EE\u9898 2\uFF1A\u5B50\u7C7B\u5728\u5B9E\u4F8B\u5316\u7684\u65F6\u5019\u4E0D\u80FD\u7ED9\u7236\u7C7B\u6784\u9020\u51FD\u6570\u4F20\u53C2\uFF1B</li></ul><h3 id="\u501F\u7528\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u501F\u7528\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F" aria-hidden="true">#</a> \u501F\u7528\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Dog</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Animal</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u501F\u7528\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F\u89E3\u51B3\u4E86\u539F\u578B\u94FE\u7EE7\u627F\u7684 2 \u4E2A\u95EE\u9898\uFF1A\u5F15\u7528\u7C7B\u578B\u5171\u4EAB\u95EE\u9898\u4EE5\u53CA\u4F20\u53C2\u95EE\u9898\u3002\u4F46\u662F\u7531\u4E8E\u65B9\u6CD5\u5FC5\u987B\u5B9A\u4E49\u5728\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u6240\u4EE5\u4F1A\u5BFC\u81F4\u6BCF\u6B21\u521B\u5EFA\u5B50\u7C7B\u5B9E\u4F8B\u90FD\u4F1A\u521B\u5EFA\u4E00\u904D\u65B9\u6CD5\u3002</p><h3 id="\u7EC4\u5408\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408\u7EE7\u627F" aria-hidden="true">#</a> \u7EC4\u5408\u7EE7\u627F</h3><p>\u7EC4\u5408\u7EE7\u627F\u7ED3\u5408\u4E86\u539F\u578B\u94FE\u548C\u76D7\u7528\u6784\u9020\u51FD\u6570\uFF0C\u5C06\u4E24\u8005\u7684\u4F18\u70B9\u96C6\u4E2D\u4E86\u8D77\u6765\u3002\u57FA\u672C\u7684\u601D\u8DEF\u662F\u4F7F\u7528\u539F\u578B\u94FE\u7EE7\u627F\u539F\u578B\u4E0A\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u800C\u901A\u8FC7\u76D7\u7528\u6784\u9020\u51FD\u6570\u7EE7\u627F\u5B9E\u4F8B\u5C5E\u6027\u3002\u8FD9\u6837\u65E2\u53EF\u4EE5\u628A\u65B9\u6CD5\u5B9A\u4E49\u5728\u539F\u578B\u4E0A\u4EE5\u5B9E\u73B0\u91CD\u7528\uFF0C\u53C8\u53EF\u4EE5\u8BA9\u6BCF\u4E2A\u5B9E\u4F8B\u90FD\u6709\u81EA\u5DF1\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Dog</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Animal</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Dog

<span class="token keyword">let</span> dog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&#39;\u5976\u6614&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
dog1<span class="token punctuation">.</span>colors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;brown&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> dog2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u8D64&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dog2<span class="token punctuation">)</span>
<span class="token comment">// { name: &quot;\u54C8\u8D64&quot;, colors: [&quot;black&quot;, &quot;white&quot;], age: 1 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F" aria-hidden="true">#</a> \u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F</h3><p>\u7EC4\u5408\u7EE7\u627F\u5DF2\u7ECF\u76F8\u5BF9\u5B8C\u5584\u4E86\uFF0C\u4F46\u8FD8\u662F\u5B58\u5728\u95EE\u9898\uFF0C\u5B83\u7684\u95EE\u9898\u5C31\u662F\u8C03\u7528\u4E86 2 \u6B21\u7236\u7C7B\u6784\u9020\u51FD\u6570\uFF0C\u7B2C\u4E00\u6B21\u662F\u5728 new Animal()\uFF0C\u7B2C\u4E8C\u6B21\u662F\u5728 Animal.call() \u8FD9\u91CC\u3002</p><p>\u6240\u4EE5\u89E3\u51B3\u65B9\u6848\u5C31\u662F\u4E0D\u76F4\u63A5\u8C03\u7528\u7236\u7C7B\u6784\u9020\u51FD\u6570\u7ED9\u5B50\u7C7B\u539F\u578B\u8D4B\u503C\uFF0C\u800C\u662F\u901A\u8FC7\u521B\u5EFA\u7A7A\u51FD\u6570 F \u83B7\u53D6\u7236\u7C7B\u539F\u578B\u7684\u526F\u672C\u3002</p><p>\u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F\u5199\u6CD5\u4E0A\u548C\u7EC4\u5408\u7EE7\u627F\u57FA\u672C\u7C7B\u4F3C\uFF0C\u533A\u522B\u662F\u5982\u4E0B\u8FD9\u91CC\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- Dog.prototype =  new Animal()
- Dog.prototype.constructor = Dog

+ function F() {}
+ F.prototype = Animal.prototype
+ let f = new F()
+ f.constructor = Dog
+ Dog.prototype = f

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u7A0D\u5FAE\u5C01\u88C5\u4E0B\u4E0A\u9762\u6DFB\u52A0\u7684\u4EE3\u7801\u540E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> o
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">inheritPrototype</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> parent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> prototype <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
    prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> child
    child<span class="token punctuation">.</span>prototype <span class="token operator">=</span> prototype
<span class="token punctuation">}</span>
<span class="token function">inheritPrototype</span><span class="token punctuation">(</span>Dog<span class="token punctuation">,</span> Animal<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5982\u679C\u4F60\u5ACC\u5F03\u4E0A\u9762\u7684\u4EE3\u7801\u592A\u591A\u4E86\uFF0C\u8FD8\u53EF\u4EE5\u57FA\u4E8E\u7EC4\u5408\u7EE7\u627F\u7684\u4EE3\u7801\u6539\u6210\u6700\u7B80\u5355\u7684\u5BC4\u751F\u5F0F\u7EC4\u5408\u7EE7\u627F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- Dog.prototype =  new Animal()
- Dog.prototype.constructor = Dog

+ Dog.prototype =  Object.create(Animal.prototype)
+ Dog.prototype.constructor = Dog

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="class-\u5B9E\u73B0\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#class-\u5B9E\u73B0\u7EE7\u627F" aria-hidden="true">#</a> class \u5B9E\u73B0\u7EE7\u627F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token punctuation">}</span>
    <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h2><p>ES5 \u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> res <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">===</span> index
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>ES6 \u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> \u6570\u7EC4\u6241\u5E73\u5316</h2><p>\u6570\u7EC4\u6241\u5E73\u5316\u5C31\u662F\u5C06 [1, [2, [3]]] \u8FD9\u79CD\u591A\u5C42\u7684\u6570\u7EC4\u62CD\u5E73\u6210\u4E00\u5C42 [1, 2, 3]\u3002\u4F7F\u7528 Array.prototype.flat \u53EF\u4EE5\u76F4\u63A5\u5C06\u591A\u5C42\u6570\u7EC4\u62CD\u5E73\u6210\u4E00\u5C42\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[1, [2, [3]]].flat(2)  // [1, 2, 3]

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u73B0\u5728\u5C31\u662F\u8981\u5B9E\u73B0 flat \u8FD9\u79CD\u6548\u679C\u3002</p><p>ES5 \u5B9E\u73B0\uFF1A\u9012\u5F52\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>ES6 \u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u6DF1\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u6D45\u62F7\u8D1D</h2><p>\u6D45\u62F7\u8D1D\uFF1A\u53EA\u8003\u8651\u5BF9\u8C61\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">shallowCopy</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    <span class="token keyword">let</span> newObj <span class="token operator">=</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newObj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u7B80\u5355\u7248\u6DF1\u62F7\u8D1D\uFF1A\u53EA\u8003\u8651\u666E\u901A\u5BF9\u8C61\u5C5E\u6027\uFF0C\u4E0D\u8003\u8651\u5185\u7F6E\u5BF9\u8C61\u548C\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">var</span> newObj <span class="token operator">=</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span>
                <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newObj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u590D\u6742\u7248\u6DF1\u514B\u9686\uFF1A\u57FA\u4E8E\u7B80\u5355\u7248\u7684\u57FA\u7840\u4E0A\uFF0C\u8FD8\u8003\u8651\u4E86\u5185\u7F6E\u5BF9\u8C61\u6BD4\u5982 Date\u3001RegExp \u7B49\u5BF9\u8C61\u548C\u51FD\u6570\u4EE5\u53CA\u89E3\u51B3\u4E86\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isObject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    target <span class="token operator">!==</span> <span class="token keyword">null</span>

<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>
    <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u503C\u7684\u6784\u9020\u51FD\u6570\uFF1A\u83B7\u53D6\u5B83\u7684\u7C7B\u578B</span>
    <span class="token keyword">let</span> constructor <span class="token operator">=</span> target<span class="token punctuation">.</span>constructor
    <span class="token comment">// \u68C0\u6D4B\u5F53\u524D\u5BF9\u8C61target\u662F\u5426\u4E0E\u6B63\u5219\u3001\u65E5\u671F\u683C\u5F0F\u5BF9\u8C61\u5339\u914D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(RegExp|Date)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7279\u6B8A\u5BF9\u8C61(\u6B63\u5219\u7C7B/\u65E5\u671F\u7C7B)\u7684\u5B9E\u4F8B</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">constructor</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// \u4E3A\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61\u505A\u6807\u8BB0</span>
        <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cloneTarget<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cloneTarget
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="\u4E8B\u4EF6\u603B\u7EBF-\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u603B\u7EBF-\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F" aria-hidden="true">#</a> \u4E8B\u4EF6\u603B\u7EBF\uFF08\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF09</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">EventEmitter</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>fn<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> index <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> f <span class="token operator">===</span> fn <span class="token operator">||</span> f<span class="token punctuation">.</span>callback <span class="token operator">===</span> fn<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tasks<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> once <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u521B\u5EFA\u526F\u672C\uFF0C\u5982\u679C\u56DE\u8C03\u51FD\u6570\u5185\u7EE7\u7EED\u6CE8\u518C\u76F8\u540C\u4E8B\u4EF6\uFF0C\u4F1A\u9020\u6210\u6B7B\u5FAA\u73AF</span>
            <span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fn <span class="token keyword">of</span> tasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>once<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token keyword">let</span> eventBus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span>
eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> fn2<span class="token punctuation">)</span>
eventBus<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5E03\u5170&#39;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;\u5E03\u5170 12&#39;</span>
<span class="token comment">// &#39;hello, \u5E03\u5170 12&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="\u89E3\u6790-url-\u53C2\u6570\u4E3A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790-url-\u53C2\u6570\u4E3A\u5BF9\u8C61" aria-hidden="true">#</a> \u89E3\u6790 URL \u53C2\u6570\u4E3A\u5BF9\u8C61</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parseParam</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> paramsStr <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.+\\?(.+)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// \u5C06 ? \u540E\u9762\u7684\u5B57\u7B26\u4E32\u53D6\u51FA\u6765</span>
    <span class="token keyword">const</span> paramsArr <span class="token operator">=</span> paramsStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5C06\u5B57\u7B26\u4E32\u4EE5 &amp; \u5206\u5272\u540E\u5B58\u5230\u6570\u7EC4\u4E2D</span>
    <span class="token keyword">let</span> paramsObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u5C06 params \u5B58\u5230\u5BF9\u8C61\u4E2D</span>
    paramsArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">=</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5904\u7406\u6709 value \u7684\u53C2\u6570</span>
            <span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span> <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5206\u5272 key \u548C value</span>
            val <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token comment">// \u89E3\u7801</span>
            val <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val <span class="token comment">// \u5224\u65AD\u662F\u5426\u8F6C\u4E3A\u6570\u5B57</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>paramsObj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u5BF9\u8C61\u6709 key\uFF0C\u5219\u6DFB\u52A0\u4E00\u4E2A\u503C</span>
                paramsObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>paramsObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u5BF9\u8C61\u6CA1\u6709\u8FD9\u4E2A key\uFF0C\u521B\u5EFA key \u5E76\u8BBE\u7F6E\u503C</span>
                paramsObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5904\u7406\u6CA1\u6709 value \u7684\u53C2\u6570</span>
            paramsObj<span class="token punctuation">[</span>param<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> paramsObj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u5B57\u7B26\u4E32\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u6A21\u677F" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u6A21\u677F</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">template<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{(\\w+)\\}\\}</span><span class="token regex-delimiter">/</span></span> <span class="token comment">// \u6A21\u677F\u5B57\u7B26\u4E32\u6B63\u5219</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u6A21\u677F\u91CC\u662F\u5426\u6709\u6A21\u677F\u5B57\u7B26\u4E32</span>
        <span class="token keyword">const</span> name <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// \u67E5\u627E\u5F53\u524D\u6A21\u677F\u91CC\u7B2C\u4E00\u4E2A\u6A21\u677F\u5B57\u7B26\u4E32\u7684\u5B57\u6BB5</span>
        template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> data<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u5C06\u7B2C\u4E00\u4E2A\u6A21\u677F\u5B57\u7B26\u4E32\u6E32\u67D3</span>
        <span class="token keyword">return</span> <span class="token function">render</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token comment">// \u9012\u5F52\u7684\u6E32\u67D3\u5E76\u8FD4\u56DE\u6E32\u67D3\u540E\u7684\u7ED3\u6784</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> template <span class="token comment">// \u5982\u679C\u6A21\u677F\u6CA1\u6709\u6A21\u677F\u5B57\u7B26\u4E32\u76F4\u63A5\u8FD4\u56DE</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6D4B\u8BD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> template <span class="token operator">=</span> <span class="token string">&#39;\u6211\u662F{{name}}\uFF0C\u5E74\u9F84{{age}}\uFF0C\u6027\u522B{{sex}}&#39;</span>
<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5E03\u5170&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">12</span>
<span class="token punctuation">}</span>
<span class="token function">render</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> person<span class="token punctuation">)</span> <span class="token comment">// \u6211\u662F\u5E03\u5170\uFF0C\u5E74\u9F8412\uFF0C\u6027\u522Bundefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u56FE\u7247\u61D2\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u56FE\u7247\u61D2\u52A0\u8F7D" aria-hidden="true">#</a> \u56FE\u7247\u61D2\u52A0\u8F7D</h2><p>\u4E0E\u666E\u901A\u7684\u56FE\u7247\u61D2\u52A0\u8F7D\u4E0D\u540C\uFF0C\u5982\u4E0B\u8FD9\u4E2A\u591A\u505A\u4E86 2 \u4E2A\u7CBE\u5FC3\u5904\u7406\uFF1A</p><ul><li>\u56FE\u7247\u5168\u90E8\u52A0\u8F7D\u5B8C\u6210\u540E\u79FB\u9664\u4E8B\u4EF6\u76D1\u542C\uFF1B</li><li>\u52A0\u8F7D\u5B8C\u7684\u56FE\u7247\uFF0C\u4ECE imgList \u79FB\u9664\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> imgList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> length <span class="token operator">=</span> imgList<span class="token punctuation">.</span>length

<span class="token comment">// \u4FEE\u6B63\u9519\u8BEF\uFF0C\u9700\u8981\u52A0\u4E0A\u81EA\u6267\u884C</span>
<span class="token operator">-</span> <span class="token keyword">const</span> <span class="token function-variable function">imgLazyLoad</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span> <span class="token keyword">const</span> imgLazyLoad <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>

   <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> deleteIndexList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        imgList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> rect <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                img<span class="token punctuation">.</span>src <span class="token operator">=</span> img<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src
                deleteIndexList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
                count<span class="token operator">++</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> imgLazyLoad<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        imgList <span class="token operator">=</span> imgList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>deleteIndexList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
<span class="token operator">-</span> <span class="token punctuation">}</span>
<span class="token operator">+</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u8FD9\u91CC\u6700\u597D\u52A0\u4E0A\u9632\u6296\u5904\u7406</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> imgLazyLoad<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,65),h=s("\u53C2\u8003\uFF1A"),w={href:"https://juejin.cn/post/6844903856489365518#heading-19",title:"https://juejin.cn/post/6844903856489365518#heading-19",target:"_blank",rel:"noopener noreferrer"},v=s("\u56FE\u7247\u61D2\u52A0\u8F7D"),j=t(`<h2 id="\u51FD\u6570\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u9632\u6296" aria-hidden="true">#</a> \u51FD\u6570\u9632\u6296</h2><p>\u89E6\u53D1\u9AD8\u9891\u4E8B\u4EF6 N \u79D2\u540E\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\uFF0C\u5982\u679C N \u79D2\u5185\u4E8B\u4EF6\u518D\u6B21\u89E6\u53D1\uFF0C\u5219\u4F1A\u91CD\u65B0\u8BA1\u65F6\u3002</p><p>\u7B80\u5355\u7248\uFF1A\u51FD\u6570\u5185\u90E8\u652F\u6301\u4F7F\u7528 this \u548C event \u5BF9\u8C61\uFF1B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> timeout
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> context <span class="token operator">=</span> <span class="token keyword">this</span>
        <span class="token keyword">var</span> args <span class="token operator">=</span> arguments
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
        timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;layout&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">getUserAction</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token comment">// \u5206\u522B\u6253\u5370\uFF1Anode \u8FD9\u4E2A\u8282\u70B9 \u548C MouseEvent</span>
    node<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> count<span class="token operator">++</span>
<span class="token punctuation">}</span>
node<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span>getUserAction<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6700\u7EC8\u7248\uFF1A\u9664\u4E86\u652F\u6301 this \u548C event \u5916\uFF0C\u8FD8\u652F\u6301\u4EE5\u4E0B\u529F\u80FD\uFF1A</p><ul><li>\u652F\u6301\u7ACB\u5373\u6267\u884C\uFF1B</li><li>\u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B</li><li>\u652F\u6301\u53D6\u6D88\u529F\u80FD\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> immediate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> timeout<span class="token punctuation">,</span> result

    <span class="token keyword">var</span> <span class="token function-variable function">debounced</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> context <span class="token operator">=</span> <span class="token keyword">this</span>
        <span class="token keyword">var</span> args <span class="token operator">=</span> arguments

        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u6267\u884C\u8FC7\uFF0C\u4E0D\u518D\u6267\u884C</span>
            <span class="token keyword">var</span> callNow <span class="token operator">=</span> <span class="token operator">!</span>timeout
            timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                timeout <span class="token operator">=</span> <span class="token keyword">null</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>callNow<span class="token punctuation">)</span> result <span class="token operator">=</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    debounced<span class="token punctuation">.</span><span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
        timeout <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> debounced
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> setUseAction <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span>getUserAction<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token comment">// \u4F7F\u7528\u9632\u6296</span>
node<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> setUseAction

<span class="token comment">// \u53D6\u6D88\u9632\u6296</span>
setUseAction<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,11),x=s("\u53C2\u8003\uFF1A"),_={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog%2Fissues%2F22",title:"https://github.com/mqyqingfeng/Blog/issues/22",target:"_blank",rel:"noopener noreferrer"},A=s("JavaScript \u4E13\u9898\u4E4B\u8DDF\u7740 underscore \u5B66\u9632\u6296"),P=t(`<h2 id="\u51FD\u6570\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8282\u6D41" aria-hidden="true">#</a> \u51FD\u6570\u8282\u6D41</h2><p>\u89E6\u53D1\u9AD8\u9891\u4E8B\u4EF6\uFF0C\u4E14 N \u79D2\u5185\u53EA\u6267\u884C\u4E00\u6B21\u3002</p><p>\u7B80\u5355\u7248\uFF1A\u4F7F\u7528\u65F6\u95F4\u6233\u6765\u5B9E\u73B0\uFF0C\u7ACB\u5373\u6267\u884C\u4E00\u6B21\uFF0C\u7136\u540E\u6BCF N \u79D2\u6267\u884C\u4E00\u6B21\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> context<span class="token punctuation">,</span> args
    <span class="token keyword">var</span> previous <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        context <span class="token operator">=</span> <span class="token keyword">this</span>
        args <span class="token operator">=</span> arguments
        <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
            previous <span class="token operator">=</span> now
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6700\u7EC8\u7248\uFF1A\u652F\u6301\u53D6\u6D88\u8282\u6D41\uFF1B\u53E6\u5916\u901A\u8FC7\u4F20\u5165\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0Coptions.leading \u6765\u8868\u793A\u662F\u5426\u53EF\u4EE5\u7ACB\u5373\u6267\u884C\u4E00\u6B21\uFF0Copitons.trailing \u8868\u793A\u7ED3\u675F\u8C03\u7528\u7684\u65F6\u5019\u662F\u5426\u8FD8\u8981\u6267\u884C\u4E00\u6B21\uFF0C\u9ED8\u8BA4\u90FD\u662F true\u3002 \u6CE8\u610F\u8BBE\u7F6E\u7684\u65F6\u5019\u4E0D\u80FD\u540C\u65F6\u5C06 leading \u6216 trailing \u8BBE\u7F6E\u4E3A false\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> timeout<span class="token punctuation">,</span> context<span class="token punctuation">,</span> args<span class="token punctuation">,</span> result
    <span class="token keyword">var</span> previous <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">)</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">var</span> <span class="token function-variable function">later</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        previous <span class="token operator">=</span> options<span class="token punctuation">.</span>leading <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        timeout <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span> context <span class="token operator">=</span> args <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> <span class="token function-variable function">throttled</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>previous <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>leading <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> previous <span class="token operator">=</span> now
        <span class="token keyword">var</span> remaining <span class="token operator">=</span> wait <span class="token operator">-</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous<span class="token punctuation">)</span>
        context <span class="token operator">=</span> <span class="token keyword">this</span>
        args <span class="token operator">=</span> arguments
        <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> remaining <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
                timeout <span class="token operator">=</span> <span class="token keyword">null</span>
            <span class="token punctuation">}</span>
            previous <span class="token operator">=</span> now
            <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span> context <span class="token operator">=</span> args <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>trailing <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>later<span class="token punctuation">,</span> remaining<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    throttled<span class="token punctuation">.</span><span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
        previous <span class="token operator">=</span> <span class="token number">0</span>
        timeout <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> throttled
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u8282\u6D41\u7684\u4F7F\u7528\u5C31\u4E0D\u62FF\u4EE3\u7801\u4E3E\u4F8B\u4E86\uFF0C\u53C2\u8003\u9632\u6296\u7684\u5199\u5C31\u884C\u3002</p>`,7),O=s("\u53C2\u8003\uFF1A"),F={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog%2Fissues%2F26",title:"https://github.com/mqyqingfeng/Blog/issues/26",target:"_blank",rel:"noopener noreferrer"},q=s("JavaScript \u4E13\u9898\u4E4B\u8DDF\u7740 underscore \u5B66\u8282\u6D41"),E=t(`<h2 id="\u51FD\u6570\u67EF\u91CC\u5316" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u67EF\u91CC\u5316" aria-hidden="true">#</a> \u51FD\u6570\u67EF\u91CC\u5316</h2><p>\u4EC0\u4E48\u53EB\u51FD\u6570\u67EF\u91CC\u5316\uFF1F\u5176\u5B9E\u5C31\u662F\u5C06\u4F7F\u7528\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u8F6C\u6362\u6210\u4E00\u7CFB\u5217\u4F7F\u7528\u4E00\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u7684\u6280\u672F\u3002\u8FD8\u4E0D\u61C2\uFF1F\u6765\u4E3E\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c
<span class="token punctuation">}</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> addCurry <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>add<span class="token punctuation">)</span>
<span class="token function">addCurry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u73B0\u5728\u5C31\u662F\u8981\u5B9E\u73B0 curry \u8FD9\u4E2A\u51FD\u6570\uFF0C\u4F7F\u51FD\u6570\u4ECE\u4E00\u6B21\u8C03\u7528\u4F20\u5165\u591A\u4E2A\u53C2\u6570\u53D8\u6210\u591A\u6B21\u8C03\u7528\u6BCF\u6B21\u4F20\u4E00\u4E2A\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">curry</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token function-variable function">judge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">==</span> fn<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">judge</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> judge
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u504F\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u504F\u51FD\u6570" aria-hidden="true">#</a> \u504F\u51FD\u6570</h2><p>\u4EC0\u4E48\u662F\u504F\u51FD\u6570\uFF1F\u504F\u51FD\u6570\u5C31\u662F\u5C06\u4E00\u4E2A n \u53C2\u7684\u51FD\u6570\u8F6C\u6362\u6210\u56FA\u5B9A x \u53C2\u7684\u51FD\u6570\uFF0C\u5269\u4F59\u53C2\u6570\uFF08n - x\uFF09\u5C06\u5728\u4E0B\u6B21\u8C03\u7528\u5168\u90E8\u4F20\u5165\u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c
<span class="token punctuation">}</span>
<span class="token keyword">let</span> partialAdd <span class="token operator">=</span> <span class="token function">partial</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token function">partialAdd</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53D1\u73B0\u6CA1\u6709\uFF0C\u5176\u5B9E\u504F\u51FD\u6570\u548C\u51FD\u6570\u67EF\u91CC\u5316\u6709\u70B9\u50CF\uFF0C\u6240\u4EE5\u6839\u636E\u51FD\u6570\u67EF\u91CC\u5316\u7684\u5B9E\u73B0\uFF0C\u80FD\u591F\u80FD\u5F88\u5FEB\u5199\u51FA\u504F\u51FD\u6570\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u4E0A\u8FD9\u4E2A\u529F\u80FD\u6BD4\u8F83\u7B80\u5355\uFF0C\u73B0\u5728\u6211\u4EEC\u5E0C\u671B\u504F\u51FD\u6570\u80FD\u548C\u67EF\u91CC\u5316\u4E00\u6837\u80FD\u5B9E\u73B0\u5360\u4F4D\u529F\u80FD\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">clg</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> partialClg <span class="token operator">=</span> <span class="token function">partial</span><span class="token punctuation">(</span>clg<span class="token punctuation">,</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token function">partialClg</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// \u4F9D\u6B21\u6253\u5370\uFF1A1, 2, 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>_</code> \u5360\u7684\u4F4D\u5176\u5B9E\u5C31\u662F 1 \u7684\u4F4D\u7F6E\u3002\u76F8\u5F53\u4E8E\uFF1Apartial(clg, 1, 2)\uFF0C\u7136\u540E partialClg(3)\u3002\u660E\u767D\u4E86\u539F\u7406\uFF0C\u6211\u4EEC\u5C31\u6765\u5199\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span>
        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="jsonp" tabindex="-1"><a class="header-anchor" href="#jsonp" aria-hidden="true">#</a> JSONP</h2><p>JSONP \u6838\u5FC3\u539F\u7406\uFF1Ascript \u6807\u7B7E\u4E0D\u53D7\u540C\u6E90\u7B56\u7565\u7EA6\u675F\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528\u6765\u8FDB\u884C\u8DE8\u57DF\u8BF7\u6C42\uFF0C\u4F18\u70B9\u662F\u517C\u5BB9\u6027\u597D\uFF0C\u4F46\u662F\u53EA\u80FD\u7528\u4E8E GET \u8BF7\u6C42\uFF1B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">jsonp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> url<span class="token punctuation">,</span> params<span class="token punctuation">,</span> callbackName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">generateUrl</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> dataSrc <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dataSrc <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token template-punctuation string">\`</span></span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        dataSrc <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>callbackName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dataSrc<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> scriptEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span>
        scriptEle<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">generateUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptEle<span class="token punctuation">)</span>
        window<span class="token punctuation">[</span>callbackName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            document<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>scriptEle<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> AJAX</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getJSON</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> xhr <span class="token operator">=</span> XMLHttpRequest
            <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">&#39;Mscrosoft.XMLHttp&#39;</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Accept&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">304</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u5B9E\u73B0\u6570\u7EC4\u539F\u578B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6570\u7EC4\u539F\u578B\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0\u6570\u7EC4\u539F\u578B\u65B9\u6CD5</h2><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach" aria-hidden="true">#</a> forEach</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forEach2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;this is null or not defined&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>callback <span class="token operator">+</span> <span class="token string">&#39; is not a function&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token constant">O</span> <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// this \u5C31\u662F\u5F53\u524D\u7684\u6570\u7EC4</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> <span class="token constant">O</span><span class="token punctuation">.</span>length <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">0</span> <span class="token comment">// \u540E\u9762\u6709\u89E3\u91CA</span>
    <span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token keyword">in</span> <span class="token constant">O</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        k<span class="token operator">++</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,22),N=s("\u53C2\u8003\uFF1A"),S={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArray%2FforEach%23polyfill",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#polyfill",target:"_blank",rel:"noopener noreferrer"},T=s("forEach#polyfill"),D=s("O.length >>> 0 \u662F\u4EC0\u4E48\u64CD\u4F5C\uFF1F\u5C31\u662F\u65E0\u7B26\u53F7\u53F3\u79FB 0 \u4F4D\uFF0C\u90A3\u6709\u4EC0\u4E48\u610F\u4E49\u561B\uFF1F\u5C31\u662F\u4E3A\u4E86\u4FDD\u8BC1\u8F6C\u6362\u540E\u7684\u503C\u4E3A\u6B63\u6574\u6570\u3002\u5176\u5B9E\u5E95\u5C42\u505A\u4E86 2 \u5C42\u8F6C\u6362\uFF0C\u7B2C\u4E00\u662F\u975E number \u8F6C\u6210 number \u7C7B\u578B\uFF0C\u7B2C\u4E8C\u662F\u5C06 number \u8F6C\u6210 Uint32 \u7C7B\u578B\u3002\u611F\u5174\u8DA3\u53EF\u4EE5\u9605\u8BFB "),L={href:"https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F100790268",title:"https://zhuanlan.zhihu.com/p/100790268",target:"_blank",rel:"noopener noreferrer"},C=s("something >>> 0 \u662F\u4EC0\u4E48\u610F\u601D?"),J=s("\u3002"),R=t(`<h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h3><p>\u57FA\u4E8E forEach \u7684\u5B9E\u73B0\u80FD\u591F\u5F88\u5BB9\u6613\u5199\u51FA map \u7684\u5B9E\u73B0\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- Array.prototype.forEach2 = function(callback, thisArg) {
+ Array.prototype.map2 = function(callback, thisArg) {
    if (this == null) {
        throw new TypeError(&#39;this is null or not defined&#39;)
    }
    if (typeof callback !== &quot;function&quot;) {
        throw new TypeError(callback + &#39; is not a function&#39;)
    }
    const O = Object(this)
    const len = O.length &gt;&gt;&gt; 0
-   let k = 0
+   let k = 0, res = []
    while (k &lt; len) {
        if (k in O) {
-           callback.call(thisArg, O[k], k, O);
+           res[k] = callback.call(thisArg, O[k], k, O);
        }
        k++;
    }
+   return res
}

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><p>\u540C\u6837\uFF0C\u57FA\u4E8E forEach \u7684\u5B9E\u73B0\u80FD\u591F\u5F88\u5BB9\u6613\u5199\u51FA filter \u7684\u5B9E\u73B0\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- Array.prototype.forEach2 = function(callback, thisArg) {
+ Array.prototype.filter2 = function(callback, thisArg) {
    if (this == null) {
        throw new TypeError(&#39;this is null or not defined&#39;)
    }
    if (typeof callback !== &quot;function&quot;) {
        throw new TypeError(callback + &#39; is not a function&#39;)
    }
    const O = Object(this)
    const len = O.length &gt;&gt;&gt; 0
-   let k = 0
+   let k = 0, res = []
    while (k &lt; len) {
        if (k in O) {
-           callback.call(thisArg, O[k], k, O);
+           if (callback.call(thisArg, O[k], k, O)) {
+               res.push(O[k])
+           }
        }
        k++;
    }
+   return res
}

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="some" tabindex="-1"><a class="header-anchor" href="#some" aria-hidden="true">#</a> some</h3><p>\u540C\u6837\uFF0C\u57FA\u4E8E forEach \u7684\u5B9E\u73B0\u80FD\u591F\u5F88\u5BB9\u6613\u5199\u51FA some \u7684\u5B9E\u73B0\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- Array.prototype.forEach2 = function(callback, thisArg) {
+ Array.prototype.some2 = function(callback, thisArg) {
    if (this == null) {
        throw new TypeError(&#39;this is null or not defined&#39;)
    }
    if (typeof callback !== &quot;function&quot;) {
        throw new TypeError(callback + &#39; is not a function&#39;)
    }
    const O = Object(this)
    const len = O.length &gt;&gt;&gt; 0
    let k = 0
    while (k &lt; len) {
        if (k in O) {
-           callback.call(thisArg, O[k], k, O);
+           if (callback.call(thisArg, O[k], k, O)) {
+               return true
+           }
        }
        k++;
    }
+   return false
}

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="reduce" tabindex="-1"><a class="header-anchor" href="#reduce" aria-hidden="true">#</a> reduce</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">reduce2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;this is null or not defined&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>callback <span class="token operator">+</span> <span class="token string">&#39; is not a function&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token constant">O</span> <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> <span class="token constant">O</span><span class="token punctuation">.</span>length <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">0</span>
    <span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        acc

    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        acc <span class="token operator">=</span> initialValue
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6CA1\u4F20\u5165\u521D\u59CB\u503C\u7684\u65F6\u5019\uFF0C\u53D6\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u975E empty \u7684\u503C\u4E3A\u521D\u59CB\u503C</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> len <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>k <span class="token keyword">in</span> <span class="token constant">O</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            k<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Reduce of empty array with no initial value&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        acc <span class="token operator">=</span> <span class="token constant">O</span><span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token keyword">in</span> <span class="token constant">O</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            acc <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        k<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> acc
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="\u5B9E\u73B0\u51FD\u6570\u539F\u578B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u51FD\u6570\u539F\u578B\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0\u51FD\u6570\u539F\u578B\u65B9\u6CD5</h2><h3 id="call" tabindex="-1"><a class="header-anchor" href="#call" aria-hidden="true">#</a> call</h3><p>\u4F7F\u7528\u4E00\u4E2A\u6307\u5B9A\u7684 this \u503C\u548C\u4E00\u4E2A\u6216\u591A\u4E2A\u53C2\u6570\u6765\u8C03\u7528\u4E00\u4E2A\u51FD\u6570\u3002</p><p>\u5B9E\u73B0\u8981\u70B9\uFF1A</p><ul><li>this \u53EF\u80FD\u4F20\u5165 null\uFF1B</li><li>\u4F20\u5165\u4E0D\u56FA\u5B9A\u4E2A\u6570\u7684\u53C2\u6570\uFF1B</li><li>\u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> context <span class="token operator">||</span> window
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>

    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="apply" tabindex="-1"><a class="header-anchor" href="#apply" aria-hidden="true">#</a> apply</h3><p>apply \u548C call \u4E00\u6837\uFF0C\u552F\u4E00\u7684\u533A\u522B\u5C31\u662F call \u662F\u4F20\u5165\u4E0D\u56FA\u5B9A\u4E2A\u6570\u7684\u53C2\u6570\uFF0C\u800C apply \u662F\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\u3002</p><p>\u5B9E\u73B0\u8981\u70B9\uFF1A</p><ul><li>this \u53EF\u80FD\u4F20\u5165 null\uFF1B</li><li>\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\uFF1B</li><li>\u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> context <span class="token operator">||</span> window
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>

    <span class="token keyword">var</span> result
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arr[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="bind" tabindex="-1"><a class="header-anchor" href="#bind" aria-hidden="true">#</a> bind</h3><p>bind \u65B9\u6CD5\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u5728 bind() \u88AB\u8C03\u7528\u65F6\uFF0C\u8FD9\u4E2A\u65B0\u51FD\u6570\u7684 this \u88AB\u6307\u5B9A\u4E3A bind() \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u800C\u5176\u4F59\u53C2\u6570\u5C06\u4F5C\u4E3A\u65B0\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u4F9B\u8C03\u7528\u65F6\u4F7F\u7528\u3002</p><p>\u5B9E\u73B0\u8981\u70B9\uFF1A</p><ul><li>bind() \u9664\u4E86 this \u5916\uFF0C\u8FD8\u53EF\u4F20\u5165\u591A\u4E2A\u53C2\u6570\uFF1B</li><li>bing \u521B\u5EFA\u7684\u65B0\u51FD\u6570\u53EF\u80FD\u4F20\u5165\u591A\u4E2A\u53C2\u6570\uFF1B</li><li>\u65B0\u51FD\u6570\u53EF\u80FD\u88AB\u5F53\u505A\u6784\u9020\u51FD\u6570\u8C03\u7528\uFF1B</li><li>\u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fNOP</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fBound</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> bindArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>
            <span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">fNOP</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context<span class="token punctuation">,</span>
            args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>bindArgs<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fNOP<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype
    fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fNOP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> fBound
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u5B9E\u73B0-new-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-new-\u5173\u952E\u5B57" aria-hidden="true">#</a> \u5B9E\u73B0 new \u5173\u952E\u5B57</h2><p>new \u8FD0\u7B97\u7B26\u7528\u6765\u521B\u5EFA\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u5BF9\u8C61\u7C7B\u578B\u7684\u5B9E\u4F8B\u6216\u8005\u5177\u6709\u6784\u9020\u51FD\u6570\u7684\u5185\u7F6E\u5BF9\u8C61\u7684\u5B9E\u4F8B\u3002</p><p>\u5B9E\u73B0\u8981\u70B9\uFF1A</p><ul><li>new \u4F1A\u4EA7\u751F\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF1B</li><li>\u65B0\u5BF9\u8C61\u9700\u8981\u80FD\u591F\u8BBF\u95EE\u5230\u6784\u9020\u51FD\u6570\u7684\u5C5E\u6027\uFF0C\u6240\u4EE5\u9700\u8981\u91CD\u65B0\u6307\u5B9A\u5B83\u7684\u539F\u578B\uFF1B</li><li>\u6784\u9020\u51FD\u6570\u53EF\u80FD\u4F1A\u663E\u793A\u8FD4\u56DE\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">objectFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    Constructor <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
    obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Constructor</span><span class="token punctuation">.</span>prototype
    <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token function">Constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>

    <span class="token comment">// ret || obj \u8FD9\u91CC\u8FD9\u4E48\u5199\u8003\u8651\u4E86\u6784\u9020\u51FD\u6570\u663E\u793A\u8FD4\u56DE null \u7684\u60C5\u51B5</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> ret <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> ret <span class="token operator">||</span> obj <span class="token operator">:</span> obj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token function">objectFactory</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token string">&#39;\u5E03\u5170&#39;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;\u5E03\u5170&#39;, age: 12 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u5B9E\u73B0-instanceof-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-instanceof-\u5173\u952E\u5B57" aria-hidden="true">#</a> \u5B9E\u73B0 instanceof \u5173\u952E\u5B57</h2><p>instanceof \u5C31\u662F\u5224\u65AD\u6784\u9020\u51FD\u6570\u7684 prototype \u5C5E\u6027\u662F\u5426\u51FA\u73B0\u5728\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">instanceOf</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> proto <span class="token operator">=</span> left<span class="token punctuation">.</span>__proto__
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> right<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        proto <span class="token operator">=</span> proto<span class="token punctuation">.</span>__proto__
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0A\u9762\u7684 left.<strong>proto</strong> \u8FD9\u79CD\u5199\u6CD5\u53EF\u4EE5\u6362\u6210 Object.getPrototypeOf(left)\u3002</p><h2 id="\u5B9E\u73B0-object-create" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-object-create" aria-hidden="true">#</a> \u5B9E\u73B0 Object.create</h2><p>Object.create()\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u4F7F\u7528\u73B0\u6709\u7684\u5BF9\u8C61\u6765\u63D0\u4F9B\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u7684__proto__\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function-variable function">create2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">proto<span class="token punctuation">,</span> propertyObject <span class="token operator">=</span> <span class="token keyword">undefined</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> proto <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> proto <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Object prototype may only be an Object or null.&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>propertyObject <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Cannot convert undefined or null to object&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> proto
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>propertyObject <span class="token operator">!=</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> propertyObject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6CA1\u6709\u539F\u578B\u5BF9\u8C61\u7684\u5BF9\u8C61\uFF0CObject.create(null)</span>
        obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u5B9E\u73B0-object-assign" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-object-assign" aria-hidden="true">#</a> \u5B9E\u73B0 Object.assign</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function-variable function">assign2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> <span class="token operator">...</span>source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Cannot convert undefined or null to object&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    source<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ret<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> ret
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u5B9E\u73B0-json-stringify" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-json-stringify" aria-hidden="true">#</a> \u5B9E\u73B0 JSON.stringify</h2>`,44),I=s("JSON.stringify([, replacer [, space]) \u65B9\u6CD5\u662F\u5C06\u4E00\u4E2A JavaScript \u503C(\u5BF9\u8C61\u6216\u8005\u6570\u7EC4)\u8F6C\u6362\u4E3A\u4E00\u4E2A JSON \u5B57\u7B26\u4E32\u3002\u6B64\u5904\u6A21\u62DF\u5B9E\u73B0\uFF0C\u4E0D\u8003\u8651\u53EF\u9009\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570 replacer \u548C\u7B2C\u4E09\u4E2A\u53C2\u6570 space\uFF0C\u5982\u679C\u5BF9\u8FD9\u4E24\u4E2A\u53C2\u6570\u7684\u4F5C\u7528\u8FD8\u4E0D\u4E86\u89E3\uFF0C\u5EFA\u8BAE\u9605\u8BFB "),z={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FJSON%2Fstringify",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"},B=s("MDN"),U=s(" \u6587\u6863\u3002"),$=t(`<ol><li>\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF1A <ul><li>undefined \u8F6C\u6362\u4E4B\u540E\u4ECD\u662F undefined(\u7C7B\u578B\u4E5F\u662F undefined)</li><li>boolean \u503C\u8F6C\u6362\u4E4B\u540E\u662F\u5B57\u7B26\u4E32 &quot;false&quot;/&quot;true&quot;</li><li>number \u7C7B\u578B(\u9664\u4E86 NaN \u548C Infinity)\u8F6C\u6362\u4E4B\u540E\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u6570\u503C</li><li>symbol \u8F6C\u6362\u4E4B\u540E\u662F undefined</li><li>null \u8F6C\u6362\u4E4B\u540E\u662F\u5B57\u7B26\u4E32 &quot;null&quot;</li><li>string \u8F6C\u6362\u4E4B\u540E\u4ECD\u662F string</li><li>NaN \u548C Infinity \u8F6C\u6362\u4E4B\u540E\u662F\u5B57\u7B26\u4E32 &quot;null&quot;</li></ul></li><li>\u51FD\u6570\u7C7B\u578B\uFF1A\u8F6C\u6362\u4E4B\u540E\u662F undefined</li><li>\u5982\u679C\u662F\u5BF9\u8C61\u7C7B\u578B(\u975E\u51FD\u6570) <ul><li>\u5982\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF1A\u5982\u679C\u5C5E\u6027\u503C\u4E2D\u51FA\u73B0\u4E86 undefined\u3001\u4EFB\u610F\u7684\u51FD\u6570\u4EE5\u53CA symbol\uFF0C\u8F6C\u6362\u6210\u5B57\u7B26\u4E32 &quot;null&quot; \uFF1B</li><li>\u5982\u679C\u662F RegExp \u5BF9\u8C61\uFF1A\u8FD4\u56DE {} (\u7C7B\u578B\u662F string)\uFF1B</li><li>\u5982\u679C\u662F Date \u5BF9\u8C61\uFF0C\u8FD4\u56DE Date \u7684 toJSON \u5B57\u7B26\u4E32\u503C\uFF1B</li><li>\u5982\u679C\u662F\u666E\u901A\u5BF9\u8C61\uFF1B <ul><li>\u5982\u679C\u6709 toJSON() \u65B9\u6CD5\uFF0C\u90A3\u4E48\u5E8F\u5217\u5316 toJSON() \u7684\u8FD4\u56DE\u503C\u3002</li><li>\u5982\u679C\u5C5E\u6027\u503C\u4E2D\u51FA\u73B0\u4E86 undefined\u3001\u4EFB\u610F\u7684\u51FD\u6570\u4EE5\u53CA symbol \u503C\uFF0C\u5FFD\u7565\u3002</li><li>\u6240\u6709\u4EE5 symbol \u4E3A\u5C5E\u6027\u952E\u7684\u5C5E\u6027\u90FD\u4F1A\u88AB\u5B8C\u5168\u5FFD\u7565\u6389\u3002</li></ul></li></ul></li><li>\u5BF9\u5305\u542B\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61\uFF08\u5BF9\u8C61\u4E4B\u95F4\u76F8\u4E92\u5F15\u7528\uFF0C\u5F62\u6210\u65E0\u9650\u5FAA\u73AF\uFF09\u6267\u884C\u6B64\u65B9\u6CD5\uFF0C\u4F1A\u629B\u51FA\u9519\u8BEF\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">jsonStringify</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dataType <span class="token operator">=</span> <span class="token keyword">typeof</span> data

    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> data
        <span class="token comment">//data \u53EF\u80FD\u662F string/number/null/undefined/boolean</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">||</span> data <span class="token operator">===</span> <span class="token number">Infinity</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//NaN \u548C Infinity \u5E8F\u5217\u5316\u8FD4\u56DE &quot;null&quot;</span>
            result <span class="token operator">=</span> <span class="token string">&#39;null&#39;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
            dataType <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span>
            dataType <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">||</span>
            dataType <span class="token operator">===</span> <span class="token string">&#39;symbol&#39;</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//function \u3001undefined \u3001symbol \u5E8F\u5217\u5316\u8FD4\u56DE undefined</span>
            <span class="token keyword">return</span> <span class="token keyword">undefined</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//boolean \u8FD4\u56DE String()</span>
        <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dataType <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&#39;null&#39;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>toJSON <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> data<span class="token punctuation">.</span>toJSON <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">jsonStringify</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token comment">//\u5982\u679C\u662F\u6570\u7EC4</span>
            <span class="token comment">//toJSON \u65B9\u6CD5\u53EF\u4EE5\u5B58\u5728\u4E8E\u539F\u578B\u94FE\u4E2D</span>
            data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>
                    <span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">||</span>
                    <span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span>
                    <span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;symbol&#39;</span>
                <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;null&#39;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">jsonStringify</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            result <span class="token operator">=</span> <span class="token string">&#39;[&#39;</span> <span class="token operator">+</span> result <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&#39;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u666E\u901A\u5BF9\u8C61</span>
            <span class="token doc-comment comment">/**
             * \u5FAA\u73AF\u5F15\u7528\u629B\u9519(\u6682\u672A\u68C0\u6D4B\uFF0C\u5FAA\u73AF\u5F15\u7528\u65F6\uFF0C\u5806\u6808\u6EA2\u51FA)
             * symbol key \u5FFD\u7565
             * undefined\u3001\u51FD\u6570\u3001symbol \u4E3A\u5C5E\u6027\u503C\uFF0C\u88AB\u5FFD\u7565
             */</span>
            <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">!==</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//key \u5982\u679C\u662Fsymbol\u5BF9\u8C61\uFF0C\u5FFD\u7565</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>
                        data<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token keyword">typeof</span> data<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token keyword">typeof</span> data<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;symbol&#39;</span>
                    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u952E\u503C\u5982\u679C\u662F undefined\u3001\u51FD\u6570\u3001symbol \u4E3A\u5C5E\u6027\u503C\uFF0C\u5FFD\u7565</span>
                        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
                            <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token function">jsonStringify</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span>
                        <span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">&#39;{&#39;</span> <span class="token operator">+</span> result <span class="token operator">+</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&#39;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div>`,2),G=s("\u53C2\u8003\uFF1A"),X={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FYvetteLau%2FStep-By-Step%2Fissues%2F39%23issuecomment-508327280",title:"https://github.com/YvetteLau/Step-By-Step/issues/39#issuecomment-508327280",target:"_blank",rel:"noopener noreferrer"},M=s("\u5B9E\u73B0 JSON.stringify"),H=t(`<h2 id="\u5B9E\u73B0-json-parse" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-json-parse" aria-hidden="true">#</a> \u5B9E\u73B0 JSON.parse</h2><p>\u4ECB\u7ECD 2 \u79CD\u65B9\u6CD5\u5B9E\u73B0\uFF1A</p><ul><li>eval \u5B9E\u73B0\uFF1B</li><li>new Function \u5B9E\u73B0\uFF1B</li></ul><h3 id="eval-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#eval-\u5B9E\u73B0" aria-hidden="true">#</a> eval \u5B9E\u73B0</h3><p>\u7B2C\u4E00\u79CD\u65B9\u5F0F\u6700\u7B80\u5355\uFF0C\u4E5F\u6700\u76F4\u89C2\uFF0C\u5C31\u662F\u76F4\u63A5\u8C03\u7528 eval\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token string">&#39;{&quot;a&quot;:&quot;1&quot;, &quot;b&quot;:2}&#39;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span> <span class="token operator">+</span> json <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span> <span class="token comment">// obj \u5C31\u662F json \u53CD\u5E8F\u5217\u5316\u4E4B\u540E\u5F97\u5230\u7684\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4F46\u662F\u76F4\u63A5\u8C03\u7528 eval \u4F1A\u5B58\u5728\u5B89\u5168\u95EE\u9898\uFF0C\u5982\u679C\u6570\u636E\u4E2D\u53EF\u80FD\u4E0D\u662F json \u6570\u636E\uFF0C\u800C\u662F\u53EF\u6267\u884C\u7684 JavaScript \u4EE3\u7801\uFF0C\u90A3\u5F88\u53EF\u80FD\u4F1A\u9020\u6210 XSS \u653B\u51FB\u3002\u56E0\u6B64\uFF0C\u5728\u8C03\u7528 eval \u4E4B\u524D\uFF0C\u9700\u8981\u5BF9\u6570\u636E\u8FDB\u884C\u6821\u9A8C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> rx_one <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\],:{}\\s]*$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">var</span> rx_two <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\(?:[&quot;\\\\\\/bfnrt]|u[0-9a-fA-F]{4})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">var</span> rx_three <span class="token operator">=</span>
    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&quot;[^&quot;\\\\\\n\\r]*&quot;|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">var</span> rx_four <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:^|:|,)(?:\\s*\\[)+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>
    rx_one<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
        json<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>rx_two<span class="token punctuation">,</span> <span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>rx_three<span class="token punctuation">,</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>rx_four<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span> <span class="token operator">+</span> json <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,8),V=s("\u53C2\u8003\uFF1A"),W={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fyoungwind%2Fblog%2Fissues%2F115%23issue-300869613",title:"https://github.com/youngwind/blog/issues/115#issue-300869613",target:"_blank",rel:"noopener noreferrer"},Y=s("JSON.parse \u4E09\u79CD\u5B9E\u73B0\u65B9\u5F0F"),K=t(`<h3 id="new-function-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#new-function-\u5B9E\u73B0" aria-hidden="true">#</a> new Function \u5B9E\u73B0</h3><p>Function \u4E0E eval \u6709\u76F8\u540C\u7684\u5B57\u7B26\u4E32\u53C2\u6570\u7279\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;:&quot;\u5C0F\u59D0\u59D0&quot;, &quot;age&quot;:20}&#39;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;return &#39;</span> <span class="token operator">+</span> json<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u5B9E\u73B0-promise" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-promise" aria-hidden="true">#</a> \u5B9E\u73B0 Promise</h2>`,4),Q=s("\u5B9E\u73B0 Promise \u9700\u8981\u5B8C\u5168\u8BFB\u61C2 "),Z={href:"https://link.juejin.cn/?target=https%3A%2F%2Fpromisesaplus.com%2F",title:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"},nn=s("Promise A+ \u89C4\u8303"),sn=s("\uFF0C\u4E0D\u8FC7\u4ECE\u603B\u4F53\u7684\u5B9E\u73B0\u4E0A\u770B\uFF0C\u6709\u5982\u4E0B\u51E0\u4E2A\u70B9\u9700\u8981\u8003\u8651\u5230\uFF1A"),an=t(`<ul><li>then \u9700\u8981\u652F\u6301\u94FE\u5F0F\u8C03\u7528\uFF0C\u6240\u4EE5\u5F97\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise\uFF1B</li><li>\u5904\u7406\u5F02\u6B65\u95EE\u9898\uFF0C\u6240\u4EE5\u5F97\u5148\u7528 onResolvedCallbacks \u548C onRejectedCallbacks \u5206\u522B\u628A\u6210\u529F\u548C\u5931\u8D25\u7684\u56DE\u8C03\u5B58\u8D77\u6765\uFF1B</li><li>\u4E3A\u4E86\u8BA9\u94FE\u5F0F\u8C03\u7528\u6B63\u5E38\u8FDB\u884C\u4E0B\u53BB\uFF0C\u9700\u8981\u5224\u65AD onFulfilled \u548C onRejected \u7684\u7C7B\u578B\uFF1B</li><li>onFulfilled \u548C onRejected \u9700\u8981\u88AB\u5F02\u6B65\u8C03\u7528\uFF0C\u8FD9\u91CC\u7528 setTimeout \u6A21\u62DF\u5F02\u6B65\uFF1B</li><li>\u5904\u7406 Promise \u7684 resolve\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">PENDING</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> resolve <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULFILLED</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> reject <span class="token operator">=</span> <span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u89E3\u51B3 onFufilled\uFF0ConRejected \u6CA1\u6709\u4F20\u503C\u7684\u95EE\u9898</span>
        onFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> onFulfilled <span class="token operator">:</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> v<span class="token punctuation">;</span>
        <span class="token comment">// \u56E0\u4E3A\u9519\u8BEF\u7684\u503C\u8981\u8BA9\u540E\u9762\u8BBF\u95EE\u5230\uFF0C\u6240\u4EE5\u8FD9\u91CC\u4E5F\u8981\u629B\u51FA\u9519\u8BEF\uFF0C\u4E0D\u7136\u4F1A\u5728\u4E4B\u540E then \u7684 resolve \u4E2D\u6355\u83B7</span>
        onRejected <span class="token operator">=</span> <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> onRejected <span class="token operator">:</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6BCF\u6B21\u8C03\u7528 then \u90FD\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 promise</span>
        <span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Promise/A+ 2.2.4 --- setTimeout</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// x\u53EF\u80FD\u662F\u4E00\u4E2Aproimise</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Promise/A+ 2.2.3</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> promise2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> resolvePromise <span class="token operator">=</span> <span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u81EA\u5DF1\u7B49\u5F85\u81EA\u5DF1\u5B8C\u6210\u662F\u9519\u8BEF\u7684\u5B9E\u73B0\uFF0C\u7528\u4E00\u4E2A\u7C7B\u578B\u9519\u8BEF\uFF0C\u7ED3\u675F\u6389 promise  Promise/A+ 2.3.1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise2 <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Chaining cycle detected for promise #&lt;Promise&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Promise/A+ 2.3.3.3.3 \u53EA\u80FD\u8C03\u7528\u4E00\u6B21</span>
    <span class="token keyword">let</span> called<span class="token punctuation">;</span>
    <span class="token comment">// \u540E\u7EED\u7684\u6761\u4EF6\u8981\u4E25\u683C\u5224\u65AD \u4FDD\u8BC1\u4EE3\u7801\u80FD\u548C\u522B\u7684\u5E93\u4E00\u8D77\u4F7F\u7528</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E3A\u4E86\u5224\u65AD resolve \u8FC7\u7684\u5C31\u4E0D\u7528\u518D reject \u4E86\uFF08\u6BD4\u5982 reject \u548C resolve \u540C\u65F6\u8C03\u7528\u7684\u65F6\u5019\uFF09  Promise/A+ 2.3.3.1</span>
            <span class="token keyword">let</span> then <span class="token operator">=</span> x<span class="token punctuation">.</span>then<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0D\u8981\u5199\u6210 x.then\uFF0C\u76F4\u63A5 then.call \u5C31\u53EF\u4EE5\u4E86 \u56E0\u4E3A x.then \u4F1A\u518D\u6B21\u53D6\u503C\uFF0CObject.defineProperty  Promise/A+ 2.3.3.3</span>
                <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
                    x<span class="token punctuation">,</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u6839\u636E promise \u7684\u72B6\u6001\u51B3\u5B9A\u662F\u6210\u529F\u8FD8\u662F\u5931\u8D25</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                        called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token comment">// \u9012\u5F52\u89E3\u6790\u7684\u8FC7\u7A0B\uFF08\u56E0\u4E3A\u53EF\u80FD promise \u4E2D\u8FD8\u6709 promise\uFF09 Promise/A+ 2.3.3.3.1</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> y<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u53EA\u8981\u5931\u8D25\u5C31\u5931\u8D25 Promise/A+ 2.3.3.3.2</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                        called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C x.then \u662F\u4E2A\u666E\u901A\u503C\u5C31\u76F4\u63A5\u8FD4\u56DE resolve \u4F5C\u4E3A\u7ED3\u679C  Promise/A+ 2.3.3.4</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Promise/A+ 2.3.3.2</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C x \u662F\u4E2A\u666E\u901A\u503C\u5C31\u76F4\u63A5\u8FD4\u56DE resolve \u4F5C\u4E3A\u7ED3\u679C  Promise/A+ 2.3.4</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br></div></div><p>Promise \u5199\u5B8C\u4E4B\u540E\u53EF\u4EE5\u901A\u8FC7 promises-aplus-tests \u8FD9\u4E2A\u5305\u5BF9\u6211\u4EEC\u5199\u7684\u4EE3\u7801\u8FDB\u884C\u6D4B\u8BD5\uFF0C\u770B\u662F\u5426\u7B26\u5408 A+ \u89C4\u8303\u3002\u4E0D\u8FC7\u6D4B\u8BD5\u524D\u8FD8\u5F97\u52A0\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// promise.js</span>
<span class="token comment">// \u8FD9\u91CC\u662F\u4E0A\u9762\u5199\u7684 Promise \u5168\u90E8\u4EE3\u7801</span>
Promise<span class="token punctuation">.</span>defer <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function-variable function">deferred</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dfd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    dfd<span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        dfd<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve
        dfd<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> dfd
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Promise
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5168\u5C40\u5B89\u88C5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm i promises<span class="token operator">-</span>aplus<span class="token operator">-</span>tests <span class="token operator">-</span>g

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7EC8\u7AEF\u4E0B\u6267\u884C\u9A8C\u8BC1\u547D\u4EE4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promises<span class="token operator">-</span>aplus<span class="token operator">-</span>tests promise<span class="token punctuation">.</span>js

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E0A\u9762\u5199\u7684\u4EE3\u7801\u53EF\u4EE5\u987A\u5229\u901A\u8FC7\u5168\u90E8 872 \u4E2A\u6D4B\u8BD5\u7528\u4F8B\u3002</p><p>\u53C2\u8003\uFF1A</p>`,10),pn={href:"https://juejin.cn/post/6844903625769091079",title:"https://juejin.cn/post/6844903625769091079",target:"_blank",rel:"noopener noreferrer"},tn=s("BAT \u524D\u7AEF\u7ECF\u5178\u9762\u8BD5\u95EE\u9898\uFF1A\u53F2\u4E0A\u6700\u6700\u6700\u8BE6\u7EC6\u7684\u624B\u5199 Promise \u6559\u7A0B"),en={href:"https://link.juejin.cn/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FqdJ0Xd8zTgtetFdlJL3P1g",title:"https://mp.weixin.qq.com/s/qdJ0Xd8zTgtetFdlJL3P1g",target:"_blank",rel:"noopener noreferrer"},on=s("100 \u884C\u4EE3\u7801\u5B9E\u73B0 Promises/A+ \u89C4\u8303"),cn=t(`<h3 id="promise-resolve" tabindex="-1"><a class="header-anchor" href="#promise-resolve" aria-hidden="true">#</a> Promise.resolve</h3><p>Promsie.resolve(value) \u53EF\u4EE5\u5C06\u4EFB\u4F55\u503C\u8F6C\u6210\u503C\u4E3A value \u72B6\u6001\u662F fulfilled \u7684 Promise\uFF0C\u4F46\u5982\u679C\u4F20\u5165\u7684\u503C\u672C\u8EAB\u662F Promise \u5219\u4F1A\u539F\u6837\u8FD4\u56DE\u5B83\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F Promsie\uFF0C\u5219\u76F4\u63A5\u8F93\u51FA\u5B83</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> value
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,3),ln=s("\u53C2\u8003\uFF1A"),un={href:"https://link.juejin.cn/?target=https%3A%2F%2Fbubuzou.com%2F2020%2F10%2F22%2Fpromise%2F",title:"https://bubuzou.com/2020/10/22/promise/",target:"_blank",rel:"noopener noreferrer"},rn=s("\u6DF1\u5165\u7406\u89E3 Promise"),kn=t(`<h3 id="promise-reject" tabindex="-1"><a class="header-anchor" href="#promise-reject" aria-hidden="true">#</a> Promise.reject</h3><p>\u548C Promise.resolve() \u7C7B\u4F3C\uFF0CPromise.reject() \u4F1A\u5B9E\u4F8B\u5316\u4E00\u4E2A rejected \u72B6\u6001\u7684 Promise\u3002\u4F46\u4E0E Promise.resolve() \u4E0D\u540C\u7684\u662F\uFF0C\u5982\u679C\u7ED9 Promise.reject() \u4F20\u9012\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u5219\u8FD9\u4E2A\u5BF9\u8C61\u4F1A\u6210\u4E3A\u65B0 Promise \u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all</h3><p>Promise.all \u7684\u89C4\u5219\u662F\u8FD9\u6837\u7684\uFF1A</p><ul><li>\u4F20\u5165\u7684\u6240\u6709 Promsie \u90FD\u662F fulfilled\uFF0C\u5219\u8FD4\u56DE\u7531\u4ED6\u4EEC\u7684\u503C\u7EC4\u6210\u7684\uFF0C\u72B6\u6001\u4E3A fulfilled \u7684\u65B0 Promise\uFF1B</li><li>\u53EA\u8981\u6709\u4E00\u4E2A Promise \u662F rejected\uFF0C\u5219\u8FD4\u56DE rejected \u72B6\u6001\u7684\u65B0 Promsie\uFF0C\u4E14\u5B83\u7684\u503C\u662F\u7B2C\u4E00\u4E2A rejected \u7684 Promise \u7684\u503C\uFF1B</li><li>\u53EA\u8981\u6709\u4E00\u4E2A Promise \u662F pending\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A pending \u72B6\u6001\u7684\u65B0 Promise\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promiseArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        promiseArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    index<span class="token operator">++</span>
                    result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> Promise.race</h3><p>Promise.race \u4F1A\u8FD4\u56DE\u4E00\u4E2A\u7531\u6240\u6709\u53EF\u8FED\u4EE3\u5B9E\u4F8B\u4E2D\u7B2C\u4E00\u4E2A fulfilled \u6216 rejected \u7684\u5B9E\u4F8B\u5305\u88C5\u540E\u7684\u65B0\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promiseArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        promiseArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">rejecte</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="promise-allsettled" tabindex="-1"><a class="header-anchor" href="#promise-allsettled" aria-hidden="true">#</a> Promise.allSettled</h3><p>Promise.allSettled \u7684\u89C4\u5219\u662F\u8FD9\u6837\uFF1A</p><ul><li>\u6240\u6709 Promise \u7684\u72B6\u6001\u90FD\u53D8\u5316\u4E86\uFF0C\u90A3\u4E48\u65B0\u8FD4\u56DE\u4E00\u4E2A\u72B6\u6001\u662F fulfilled \u7684 Promise\uFF0C\u4E14\u5B83\u7684\u503C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6570\u7EC4\u7684\u6BCF\u9879\u7531\u6240\u6709 Promise \u7684\u503C\u548C\u72B6\u6001\u7EC4\u6210\u7684\u5BF9\u8C61\uFF1B</li><li>\u5982\u679C\u6709\u4E00\u4E2A\u662F pending \u7684 Promise\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A\u72B6\u6001\u662F pending \u7684\u65B0\u5B9E\u4F8B\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">allSettled</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promiseArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        promiseArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">value</span><span class="token operator">:</span> val
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">===</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">reason</span><span class="token operator">:</span> err
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">===</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="promise-any" tabindex="-1"><a class="header-anchor" href="#promise-any" aria-hidden="true">#</a> Promise.any</h3><p>Promise.any \u7684\u89C4\u5219\u662F\u8FD9\u6837\uFF1A</p><ul><li>\u7A7A\u6570\u7EC4\u6216\u8005\u6240\u6709 Promise \u90FD\u662F rejected\uFF0C\u5219\u8FD4\u56DE\u72B6\u6001\u662F rejected \u7684\u65B0 Promsie\uFF0C\u4E14\u503C\u4E3A AggregateError \u7684\u9519\u8BEF\uFF1B</li><li>\u53EA\u8981\u6709\u4E00\u4E2A\u662F fulfilled \u72B6\u6001\u7684\uFF0C\u5219\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u662F fulfilled \u7684\u65B0\u5B9E\u4F8B\uFF1B</li><li>\u5176\u4ED6\u60C5\u51B5\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A pending \u7684\u65B0\u5B9E\u4F8B\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">any</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promiseArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>promiseArr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
        promiseArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    index<span class="token operator">++</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AggregateError</span><span class="token punctuation">(</span><span class="token string">&#39;All promises were rejected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u540E\u8BDD" tabindex="-1"><a class="header-anchor" href="#\u540E\u8BDD" aria-hidden="true">#</a> \u540E\u8BDD</h2><p>\u80FD\u770B\u5230\u8FD9\u91CC\u7684\u5BF9\u4EE3\u7801\u90FD\u662F\u771F\u7231\u4E86\uFF0C\u6BD5\u7ADF\u4EE3\u7801\u8FD9\u73A9\u610F\u770B\u8D77\u6765\u662F\u771F\u7684\u5F88\u67AF\u71E5\uFF0C\u4F46\u662F\u5982\u679C\u770B\u61C2\u4E86\u540E\uFF0C\u5C31\u4F1A\u50CF\u6253\u6E38\u620F\u8D62\u4E86\u4E00\u6837\u5F00\u5FC3\uFF0C\u800C\u4E14\u8FD9\u73A9\u610F\u4F1A\u4E0A\u763E\uFF0C\u5F53\u4F60\u901A\u5173\u4E86\u8D8A\u591A\u7684\u5173\u5361\u540E\uFF0C\u4F60\u7684\u80FD\u529B\u5C31\u4F1A\u62D4\u9AD8\u4E00\u4E2A\u5C42\u6B21\u3002\u7528\u6807\u9898\u7684\u8BDD\u6765\u8BF4\u5C31\u662F\uFF1A\u641E\u61C2\u540E\uFF0C\u63D0\u5347\u771F\u7684\u5927\u3002\u52A0\u6CB9\u5427 \u{1F4AA}\uFF0C\u5E72\u996D\u4EBA</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9a330b5eb97b49cc89cf9ac78dbc9d27~tplv-k3u1fbpfcp-zoom-in-crop-mark:1956:0:0:0.image" alt="image.png"></p><p>\u5662\u4E0D\uFF0C\u4EE3\u7801\u4EBA\u3002</p>`,22),bn=s("\u672C\u6587\u8F6C\u81EA "),mn={href:"https://juejin.cn/post/6946022649768181774",target:"_blank",rel:"noopener noreferrer"},dn=s("https://juejin.cn/post/6946022649768181774"),gn=s("\uFF0C\u5982\u6709\u4FB5\u6743\uFF0C\u8BF7\u8054\u7CFB\u5220\u9664\u3002");function fn(yn,hn){const a=e("ExternalLinkIcon");return o(),c(l,null,[i,k,b,n("p",null,[m,n("a",d,[g,p(a)]),f]),y,n("p",null,[h,n("a",w,[v,p(a)])]),j,n("p",null,[x,n("a",_,[A,p(a)])]),P,n("p",null,[O,n("a",F,[q,p(a)])]),E,n("p",null,[N,n("a",S,[T,p(a)])]),n("p",null,[D,n("a",L,[C,p(a)]),J]),R,n("p",null,[I,n("a",z,[B,p(a)]),U]),$,n("p",null,[G,n("a",X,[M,p(a)])]),H,n("p",null,[V,n("a",W,[Y,p(a)])]),K,n("p",null,[Q,n("a",Z,[nn,p(a)]),sn]),an,n("ul",null,[n("li",null,[n("a",pn,[tn,p(a)])]),n("li",null,[n("a",en,[on,p(a)])])]),cn,n("p",null,[ln,n("a",un,[rn,p(a)])]),kn,n("p",null,[bn,n("a",mn,[dn,p(a)]),gn])],64)}var jn=u(r,[["render",fn]]);export{jn as default};

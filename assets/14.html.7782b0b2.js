import{r as e,o,c,a as n,b as p,F as l,e as s,d as t}from"./app.b87228d2.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h2",{id:"\u6700\u5168\u7684\u624B\u5199-js-\u9762\u8BD5\u9898",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6700\u5168\u7684\u624B\u5199-js-\u9762\u8BD5\u9898","aria-hidden":"true"},"#"),s(" \u6700\u5168\u7684\u624B\u5199 JS \u9762\u8BD5\u9898")],-1),k=n("h3",{id:"\u524D\u8A00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),s(" \u524D\u8A00")],-1),b=s("\u672C\u6587\u6574\u7406\u4E86\u524D\u7AEF\u9762\u8BD5"),m=n("strong",null,"\u9AD8\u9891",-1),d=s("\u51FA\u73B0\u7684\u624B\u5199\u6E90\u7801\u76F8\u5173\u7684\u9898\u76EE \u5176\u4E2D\u6709\u5C0F\u7F16\u9762\u8BD5\u4EB2\u81EA\u9047\u5230\u7684\u4E5F\u6709\u5176\u4ED6\u540C\u5B66\u5E2E\u5FD9\u8865\u5145\u7684 \u6574\u4F53\u91C7\u7528 "),y=n("strong",null,"es6 \u8BED\u6CD5",-1),f=s("\u5E76\u4E14\u4EE5\u7B80\u5355\u6613\u61C2\u7248\u8FDB\u884C\u5B9E\u73B0 \u5982\u679C\u5BF9\u7B54\u6848\u6709\u4E0D\u4E00\u6837\u89C1\u89E3\u7684\u540C\u5B66\u6B22\u8FCE\u8BC4\u8BBA\u533A\u8865\u5145\u8BA8\u8BBA \u867D\u7136\u9CA8\u9C7C\u54E5\u4E5F\u5F88\u4E0D\u559C\u6B22\u5185\u5377 \u4F46\u662F\u5728\u5982\u4ECA\u4EBA\u4EBA\u7686\u5377\u7684\u5927\u73AF\u5883\u4E0B \u5927\u5BB6\u53EA\u6709\u6BD4\u522B\u4EBA\u66F4\u5377\u624D\u80FD\u6536\u83B7\u66F4\u597D\u7684\u672A\u6765 \u6700\u540E\u6B22\u8FCE\u5927\u5BB6\u70B9\u51FB "),h={href:"https://juejin.cn/pin/6968285391736537102",title:"https://juejin.cn/pin/6968285391736537102",target:"_blank",rel:"noopener noreferrer"},g=s("\u94FE\u63A5"),w=s(" \u52A0\u5165\u5230\u9CA8\u9C7C\u54E5\u7684\u524D\u7AEF\u7FA4 \u5185\u63A8 \u8BA8\u8BBA\u6280\u672F \u6478\u9C7C \u6C42\u52A9 \u7686\u53EF~~"),v=t(`<blockquote><p>\u6574\u7406\u4E0D\u6613 \u5982\u679C\u89C9\u5F97\u672C\u6587\u6709\u5E2E\u52A9 \u8BB0\u5F97<strong>\u70B9\u8D5E\u4E09\u8FDE</strong>\u54E6 \u5341\u5206\u611F\u8C22\uFF01</p></blockquote><hr><h4 id="_1-compose" tabindex="-1"><a class="header-anchor" href="#_1-compose" aria-hidden="true">#</a> 1 compose</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A compose \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7528\u6CD5\u5982\u4E0B:</span>
<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn4</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">4</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>fn1<span class="token punctuation">,</span> fn2<span class="token punctuation">,</span> fn3<span class="token punctuation">,</span> fn4<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1+4+3+2+1=11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fn<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> fn<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> fn<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                <span class="token function">pre</span><span class="token punctuation">(</span><span class="token function">cur</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_2-settimeout-\u6A21\u62DF\u5B9E\u73B0-setinterval-\u5E26\u6E05\u9664\u5B9A\u65F6\u5668\u7684\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#_2-settimeout-\u6A21\u62DF\u5B9E\u73B0-setinterval-\u5E26\u6E05\u9664\u5B9A\u65F6\u5668\u7684\u7248\u672C" aria-hidden="true">#</a> 2 settimeout \u6A21\u62DF\u5B9E\u73B0 setinterval(\u5E26\u6E05\u9664\u5B9A\u65F6\u5668\u7684\u7248\u672C)</h4><p>\u9898\u76EE\u63CF\u8FF0:setinterval \u7528\u6765\u5B9E\u73B0\u5FAA\u73AF\u5B9A\u65F6\u8C03\u7528 \u53EF\u80FD\u4F1A\u5B58\u5728\u4E00\u5B9A\u7684\u95EE\u9898 \u80FD\u7528 settimeout \u89E3\u51B3\u5417</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mySettimeout</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">function</span> <span class="token function">interval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>interval<span class="token punctuation">,</span> t<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">interval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">cancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// let a=mySettimeout(()=&gt;{</span>
<span class="token comment">//   console.log(111);</span>
<span class="token comment">// },1000)</span>
<span class="token comment">// let b=mySettimeout(() =&gt; {</span>
<span class="token comment">//   console.log(222)</span>
<span class="token comment">// }, 1000)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><blockquote><p>\u6269\u5C55\uFF1A\u6211\u4EEC\u80FD\u53CD\u8FC7\u6765\u4F7F\u7528 setinterval \u6A21\u62DF\u5B9E\u73B0 settimeout \u5417\uFF1F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">mySetTimeout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// mySetTimeout(()=&gt;{</span>
<span class="token comment">//   console.log(1);</span>
<span class="token comment">// },1000)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>\u6269\u5C55\u601D\u8003\uFF1A\u4E3A\u4EC0\u4E48\u8981\u7528 settimeout \u6A21\u62DF\u5B9E\u73B0 setinterval\uFF1Fsetinterval \u7684\u7F3A\u9677\u662F\u4EC0\u4E48\uFF1F</p></blockquote><p>\u7B54\u6848\u8BF7\u81EA\u884C\u767E\u5EA6\u54C8 \u8FD9\u4E2A\u5176\u5B9E\u9762\u8BD5\u5B98\u95EE\u7684\u4E5F\u633A\u591A\u7684 \u5C0F\u7F16\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u4E86</p><h4 id="_3-\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_3-\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F" aria-hidden="true">#</a> 3 \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\u62E5\u6709 on emit once off \u65B9\u6CD5</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">EventEmitter</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>events <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5B9E\u73B0\u8BA2\u9605</span>
    <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> callBack</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callBack<span class="token punctuation">]</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callBack<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5220\u9664\u8BA2\u9605</span>
    <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> callBack</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> item <span class="token operator">!==</span> callBack
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53EA\u6267\u884C\u4E00\u6B21\u8BA2\u9605\u4E8B\u4EF6</span>
    <span class="token function">once</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> callBack</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">callBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u89E6\u53D1\u4E8B\u4EF6</span>
    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> rest<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528\u5982\u4E0B</span>
<span class="token comment">// const event = new EventEmitter();</span>

<span class="token comment">// const handle = (...rest) =&gt; {</span>
<span class="token comment">//   console.log(rest);</span>
<span class="token comment">// };</span>

<span class="token comment">// event.on(&quot;click&quot;, handle);</span>

<span class="token comment">// event.emit(&quot;click&quot;, 1, 2, 3, 4);</span>

<span class="token comment">// event.off(&quot;click&quot;, handle);</span>

<span class="token comment">// event.emit(&quot;click&quot;, 1, 2);</span>

<span class="token comment">// event.once(&quot;dbClick&quot;, () =&gt; {</span>
<span class="token comment">//   console.log(123456);</span>
<span class="token comment">// });</span>
<span class="token comment">// event.emit(&quot;dbClick&quot;);</span>
<span class="token comment">// event.emit(&quot;dbClick&quot;);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h4 id="_4-\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_4-\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> 4 \u6570\u7EC4\u53BB\u91CD</h4><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">uniqueArr</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_5-\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#_5-\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> 5 \u6570\u7EC4\u6241\u5E73\u5316</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u65B9\u6CD5\u4F7F\u591A\u7EF4\u6570\u7EC4\u53D8\u6210\u4E00\u7EF4\u6570\u7EC4</p><p>\u6700\u5E38\u89C1\u7684\u9012\u5F52\u7248\u672C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatter</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>pre<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">flatter</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// console.log(flatter([1, 2, [1, [2, 3, [4, 5, [6]]]]]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>\u6269\u5C55\u601D\u8003\uFF1A\u80FD\u7528\u8FED\u4EE3\u7684\u601D\u8DEF\u53BB\u5B9E\u73B0\u5417?</p></blockquote><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatter</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token comment">// console.log(flatter([1, 2, [1, [2, 3, [4, 5, [6]]]]]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_6-\u5BC4\u751F\u7EC4\u5408\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#_6-\u5BC4\u751F\u7EC4\u5408\u7EE7\u627F" aria-hidden="true">#</a> 6 \u5BC4\u751F\u7EC4\u5408\u7EE7\u627F</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u4F60\u8BA4\u4E3A\u4E0D\u9519\u7684 js \u7EE7\u627F\u65B9\u5F0F</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Children</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Parent</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
<span class="token punctuation">}</span>
<span class="token class-name">Children</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
<span class="token class-name">Children</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Children
<span class="token comment">// let child = new Children(&quot;111&quot;);</span>
<span class="token comment">// // console.log(child.name);</span>
<span class="token comment">// // child.say();</span>
<span class="token comment">// // child.play();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="_7-\u5B9E\u73B0\u6709\u5E76\u884C\u9650\u5236\u7684-promise-\u8C03\u5EA6\u5668" tabindex="-1"><a class="header-anchor" href="#_7-\u5B9E\u73B0\u6709\u5E76\u884C\u9650\u5236\u7684-promise-\u8C03\u5EA6\u5668" aria-hidden="true">#</a> 7 \u5B9E\u73B0\u6709\u5E76\u884C\u9650\u5236\u7684 Promise \u8C03\u5EA6\u5668</h4><p>\u9898\u76EE\u63CF\u8FF0:JS \u5B9E\u73B0\u4E00\u4E2A\u5E26\u5E76\u53D1\u9650\u5236\u7684\u5F02\u6B65\u8C03\u5EA6\u5668 Scheduler\uFF0C\u4FDD\u8BC1\u540C\u65F6\u8FD0\u884C\u7684\u4EFB\u52A1\u6700\u591A\u6709\u4E24\u4E2A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> addTask(1000,&quot;1&quot;);
 addTask(500,&quot;2&quot;);
 addTask(300,&quot;3&quot;);
 addTask(400,&quot;4&quot;);
 \u7684\u8F93\u51FA\u987A\u5E8F\u662F\uFF1A2 3 1 4

 \u6574\u4E2A\u7684\u5B8C\u6574\u6267\u884C\u6D41\u7A0B\uFF1A

\u4E00\u5F00\u59CB1\u30012\u4E24\u4E2A\u4EFB\u52A1\u5F00\u59CB\u6267\u884C
500ms\u65F6\uFF0C2\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA2\uFF0C\u4EFB\u52A13\u5F00\u59CB\u6267\u884C
800ms\u65F6\uFF0C3\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA3\uFF0C\u4EFB\u52A14\u5F00\u59CB\u6267\u884C
1000ms\u65F6\uFF0C1\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA1\uFF0C\u6B64\u65F6\u53EA\u5269\u4E0B4\u4EFB\u52A1\u5728\u6267\u884C
1200ms\u65F6\uFF0C4\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u8F93\u51FA4


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Scheduler</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maxCount <span class="token operator">=</span> limit
        <span class="token keyword">this</span><span class="token punctuation">.</span>runCounts <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> order</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">promiseCreator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>promiseCreator<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">taskStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
            <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">||</span>
            <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">||</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>runCounts <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxCount
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>runCounts<span class="token operator">++</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queue
            <span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>runCounts<span class="token operator">--</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> scheduler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scheduler</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">addTask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> order</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    scheduler<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> order<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>
<span class="token function">addTask</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span>
scheduler<span class="token punctuation">.</span><span class="token function">taskStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h4 id="_8-new-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_8-new-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 8 new \u64CD\u4F5C\u7B26</h4><p>\u9898\u76EE\u63CF\u8FF0:\u624B\u5199 new \u64CD\u4F5C\u7B26\u5B9E\u73B0</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myNew</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
\u7528\u6CD5\u5982\u4E0B\uFF1A
<span class="token comment">// // function Person(name, age) {</span>
<span class="token comment">// //   this.name = name;</span>
<span class="token comment">// //   this.age = age;</span>
<span class="token comment">// // }</span>
<span class="token comment">// // Person.prototype.say = function() {</span>
<span class="token comment">// //   console.log(this.age);</span>
<span class="token comment">// // };</span>
<span class="token comment">// // let p1 = myNew(Person, &quot;lihua&quot;, 18);</span>
<span class="token comment">// // console.log(p1.name);</span>
<span class="token comment">// // console.log(p1);</span>
<span class="token comment">// // p1.say();</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="_9-call-apply-bind" tabindex="-1"><a class="header-anchor" href="#_9-call-apply-bind" aria-hidden="true">#</a> 9 call apply bind</h4><p>\u9898\u76EE\u63CF\u8FF0:\u624B\u5199 call apply bind \u5B9E\u73B0</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context <span class="token operator">=</span> window
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u9020\u552F\u4E00\u7684key\u503C  \u4F5C\u4E3A\u6211\u4EEC\u6784\u9020\u7684context\u5185\u90E8\u65B9\u6CD5\u540D</span>
    <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment">//this\u6307\u5411\u8C03\u7528call\u7684\u51FD\u6570</span>
    <span class="token comment">// \u6267\u884C\u51FD\u6570\u5E76\u8FD4\u56DE\u7ED3\u679C \u76F8\u5F53\u4E8E\u628A\u81EA\u8EAB\u4F5C\u4E3A\u4F20\u5165\u7684context\u7684\u65B9\u6CD5\u8FDB\u884C\u8C03\u7528\u4E86</span>
    <span class="token keyword">return</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// apply\u539F\u7406\u4E00\u81F4  \u53EA\u662F\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4F20\u5165\u7684\u6570\u7EC4</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context <span class="token operator">=</span> window
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u9020\u552F\u4E00\u7684key\u503C  \u4F5C\u4E3A\u6211\u4EEC\u6784\u9020\u7684context\u5185\u90E8\u65B9\u6CD5\u540D</span>
    <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token comment">// \u6267\u884C\u51FD\u6570\u5E76\u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">return</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//bind\u5B9E\u73B0\u8981\u590D\u6742\u4E00\u70B9  \u56E0\u4E3A\u4ED6\u8003\u8651\u7684\u60C5\u51B5\u6BD4\u8F83\u591A \u8FD8\u8981\u6D89\u53CA\u5230\u53C2\u6570\u5408\u5E76(\u7C7B\u4F3C\u51FD\u6570\u67EF\u91CC\u5316)</span>

<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context <span class="token operator">=</span> window
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u9020\u552F\u4E00\u7684key\u503C  \u4F5C\u4E3A\u6211\u4EEC\u6784\u9020\u7684context\u5185\u90E8\u65B9\u6CD5\u540D</span>
    <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token comment">//  bind\u60C5\u51B5\u8981\u590D\u6742\u4E00\u70B9</span>
    <span class="token keyword">const</span> <span class="token function-variable function">result</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>innerArgs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B2C\u4E00\u79CD\u60C5\u51B5 :\u82E5\u662F\u5C06 bind \u7ED1\u5B9A\u4E4B\u540E\u7684\u51FD\u6570\u5F53\u4F5C\u6784\u9020\u51FD\u6570\uFF0C\u901A\u8FC7 new \u64CD\u4F5C\u7B26\u4F7F\u7528\uFF0C\u5219\u4E0D\u7ED1\u5B9A\u4F20\u5165\u7684 this\uFF0C\u800C\u662F\u5C06 this \u6307\u5411\u5B9E\u4F8B\u5316\u51FA\u6765\u7684\u5BF9\u8C61</span>
        <span class="token comment">// \u6B64\u65F6\u7531\u4E8Enew\u64CD\u4F5C\u7B26\u4F5C\u7528  this\u6307\u5411result\u5B9E\u4F8B\u5BF9\u8C61  \u800Cresult\u53C8\u7EE7\u627F\u81EA\u4F20\u5165\u7684_this \u6839\u636E\u539F\u578B\u94FE\u77E5\u8BC6\u53EF\u5F97\u51FA\u4EE5\u4E0B\u7ED3\u8BBA</span>
        <span class="token comment">// this.__proto__ === result.prototype   //this instanceof result =&gt;true</span>
        <span class="token comment">// this.__proto__.__proto__ === result.prototype.__proto__ === _this.prototype; //this instanceof _this =&gt;true</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">_this</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6B64\u65F6this\u6307\u5411\u6307\u5411result\u7684\u5B9E\u4F8B  \u8FD9\u65F6\u5019\u4E0D\u9700\u8981\u6539\u53D8this\u6307\u5411</span>
            <span class="token keyword">this</span><span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> _this
            <span class="token keyword">this</span><span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>innerArgs<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//\u8FD9\u91CC\u4F7F\u7528es6\u7684\u65B9\u6CD5\u8BA9bind\u652F\u6301\u53C2\u6570\u5408\u5E76</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u53EA\u662F\u4F5C\u4E3A\u666E\u901A\u51FD\u6570\u8C03\u7528  \u90A3\u5C31\u5F88\u7B80\u5355\u4E86 \u76F4\u63A5\u6539\u53D8this\u6307\u5411\u4E3A\u4F20\u5165\u7684context</span>
            context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>innerArgs<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u7ED1\u5B9A\u7684\u662F\u6784\u9020\u51FD\u6570 \u90A3\u4E48\u9700\u8981\u7EE7\u627F\u6784\u9020\u51FD\u6570\u539F\u578B\u5C5E\u6027\u548C\u65B9\u6CD5</span>
    <span class="token comment">// \u5B9E\u73B0\u7EE7\u627F\u7684\u65B9\u5F0F: \u4F7F\u7528Object.create</span>
    result<span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">//\u7528\u6CD5\u5982\u4E0B</span>

<span class="token comment">// function Person(name, age) {</span>
<span class="token comment">//   console.log(name); //&#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684name&#39;</span>
<span class="token comment">//   console.log(age); //&#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684age&#39;</span>
<span class="token comment">//   console.log(this); //\u6784\u9020\u51FD\u6570this\u6307\u5411\u5B9E\u4F8B\u5BF9\u8C61</span>
<span class="token comment">// }</span>
<span class="token comment">// // \u6784\u9020\u51FD\u6570\u539F\u578B\u7684\u65B9\u6CD5</span>
<span class="token comment">// Person.prototype.say = function() {</span>
<span class="token comment">//   console.log(123);</span>
<span class="token comment">// }</span>
<span class="token comment">// let obj = {</span>
<span class="token comment">//   objName: &#39;\u6211\u662Fobj\u4F20\u8FDB\u6765\u7684name&#39;,</span>
<span class="token comment">//   objAge: &#39;\u6211\u662Fobj\u4F20\u8FDB\u6765\u7684age&#39;</span>
<span class="token comment">// }</span>
<span class="token comment">// // \u666E\u901A\u51FD\u6570</span>
<span class="token comment">// function normalFun(name, age) {</span>
<span class="token comment">//   console.log(name);   //&#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684name&#39;</span>
<span class="token comment">//   console.log(age);   //&#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684age&#39;</span>
<span class="token comment">//   console.log(this); //\u666E\u901A\u51FD\u6570this\u6307\u5411\u7ED1\u5B9Abind\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570 \u4E5F\u5C31\u662F\u4F8B\u5B50\u4E2D\u7684obj</span>
<span class="token comment">//   console.log(this.objName); //&#39;\u6211\u662Fobj\u4F20\u8FDB\u6765\u7684name&#39;</span>
<span class="token comment">//   console.log(this.objAge); //&#39;\u6211\u662Fobj\u4F20\u8FDB\u6765\u7684age&#39;</span>
<span class="token comment">// }</span>

<span class="token comment">// \u5148\u6D4B\u8BD5\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u8C03\u7528</span>
<span class="token comment">// let bindFun = Person.myBind(obj, &#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684name&#39;)</span>
<span class="token comment">// let a = new bindFun(&#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684age&#39;)</span>
<span class="token comment">// a.say() //123</span>

<span class="token comment">// \u518D\u6D4B\u8BD5\u4F5C\u4E3A\u666E\u901A\u51FD\u6570\u8C03\u7528</span>
<span class="token comment">// let bindFun = normalFun.myBind(obj, &#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684name&#39;)</span>
<span class="token comment">//  bindFun(&#39;\u6211\u662F\u53C2\u6570\u4F20\u8FDB\u6765\u7684age&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><h4 id="_10-\u6DF1\u62F7\u8D1D-\u8003\u8651\u5230\u590D\u5236-symbol-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_10-\u6DF1\u62F7\u8D1D-\u8003\u8651\u5230\u590D\u5236-symbol-\u7C7B\u578B" aria-hidden="true">#</a> 10 \u6DF1\u62F7\u8D1D\uFF08\u8003\u8651\u5230\u590D\u5236 Symbol \u7C7B\u578B\uFF09</h4><p>\u9898\u76EE\u63CF\u8FF0:\u624B\u5199 new \u64CD\u4F5C\u7B26\u5B9E\u73B0</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> val <span class="token operator">!==</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> target <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    hash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> target<span class="token punctuation">)</span>
    Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>item<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token comment">// var obj1 = {</span>
<span class="token comment">// a:1,</span>
<span class="token comment">// b:{a:2}</span>
<span class="token comment">// };</span>
<span class="token comment">// var obj2 = deepClone(obj1);</span>
<span class="token comment">// console.log(obj1);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="_11-instanceof" tabindex="-1"><a class="header-anchor" href="#_11-instanceof" aria-hidden="true">#</a> 11 instanceof</h4><p>\u9898\u76EE\u63CF\u8FF0:\u624B\u5199 instanceof \u64CD\u4F5C\u7B26\u5B9E\u73B0</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> right<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        left <span class="token operator">=</span> left<span class="token punctuation">.</span>__proto__
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_12-\u67EF\u91CC\u5316" tabindex="-1"><a class="header-anchor" href="#_12-\u67EF\u91CC\u5316" aria-hidden="true">#</a> 12 \u67EF\u91CC\u5316</h4><p>\u9898\u76EE\u63CF\u8FF0:\u67EF\u91CC\u5316\uFF08Currying\uFF09\uFF0C\u53C8\u79F0\u90E8\u5206\u6C42\u503C\uFF08Partial Evaluation\uFF09\uFF0C\u662F\u628A\u63A5\u53D7\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u53D8\u6362\u6210\u63A5\u53D7\u4E00\u4E2A\u5355\u4E00\u53C2\u6570\uFF08\u6700\u521D\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF09\u7684\u51FD\u6570\uFF0C\u5E76\u4E14\u8FD4\u56DE\u63A5\u53D7\u4F59\u4E0B\u7684\u53C2\u6570\u800C\u4E14\u8FD4\u56DE\u7ED3\u679C\u7684\u65B0\u51FD\u6570\u7684\u6280\u672F\u3002\u6838\u5FC3\u601D\u60F3\u662F\u628A\u591A\u53C2\u6570\u4F20\u5165\u7684\u51FD\u6570\u62C6\u6210\u5355\u53C2\u6570\uFF08\u6216\u90E8\u5206\uFF09\u51FD\u6570\uFF0C\u5185\u90E8\u518D\u8FD4\u56DE\u8C03\u7528\u4E0B\u4E00\u4E2A\u5355\u53C2\u6570\uFF08\u6216\u90E8\u5206\uFF09\u51FD\u6570\uFF0C\u4F9D\u6B21\u5904\u7406\u5269\u4F59\u7684\u53C2\u6570\u3002</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">currying</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> fn<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> allArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">]</span>
    <span class="token keyword">const</span> <span class="token function-variable function">res</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>newArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        allArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>allArgs<span class="token punctuation">,</span> <span class="token operator">...</span>newArgs<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>allArgs<span class="token punctuation">.</span>length <span class="token operator">===</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>allArgs<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> res
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token comment">// \u7528\u6CD5\u5982\u4E0B\uFF1A</span>
<span class="token comment">// const add = (a, b, c) =&gt; a + b + c;</span>
<span class="token comment">// const a = currying(add, 1);</span>
<span class="token comment">// console.log(a(2,3))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_13-\u5192\u6CE1\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-n-2" tabindex="-1"><a class="header-anchor" href="#_13-\u5192\u6CE1\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-n-2" aria-hidden="true">#</a> 13 \u5192\u6CE1\u6392\u5E8F--\u65F6\u95F4\u590D\u6742\u5EA6 n^2</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u5192\u6CE1\u6392\u5E8F</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7F13\u5B58\u6570\u7EC4\u957F\u5EA6</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
    <span class="token comment">// \u5916\u5C42\u5FAA\u73AF\u7528\u4E8E\u63A7\u5236\u4ECE\u5934\u5230\u5C3E\u7684\u6BD4\u8F83+\u4EA4\u6362\u5230\u5E95\u6709\u591A\u5C11\u8F6E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5185\u5C42\u5FAA\u73AF\u7528\u4E8E\u5B8C\u6210\u6BCF\u4E00\u8F6E\u904D\u5386\u8FC7\u7A0B\u4E2D\u7684\u91CD\u590D\u6BD4\u8F83+\u4EA4\u6362</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u82E5\u76F8\u90BB\u5143\u7D20\u524D\u9762\u7684\u6570\u6BD4\u540E\u9762\u7684\u5927</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4EA4\u6362\u4E24\u8005</span>
                <span class="token punctuation">;</span><span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE\u6570\u7EC4</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token comment">// console.log(bubbleSort([3, 6, 2, 4, 1]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_14-\u9009\u62E9\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-n-2" tabindex="-1"><a class="header-anchor" href="#_14-\u9009\u62E9\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-n-2" aria-hidden="true">#</a> 14 \u9009\u62E9\u6392\u5E8F--\u65F6\u95F4\u590D\u6742\u5EA6 n^2</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u9009\u62E9\u6392\u5E8F</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7F13\u5B58\u6570\u7EC4\u957F\u5EA6</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
    <span class="token comment">// \u5B9A\u4E49 minIndex\uFF0C\u7F13\u5B58\u5F53\u524D\u533A\u95F4\u6700\u5C0F\u503C\u7684\u7D22\u5F15\uFF0C\u6CE8\u610F\u662F\u7D22\u5F15</span>
    <span class="token keyword">let</span> minIndex
    <span class="token comment">// i \u662F\u5F53\u524D\u6392\u5E8F\u533A\u95F4\u7684\u8D77\u70B9</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316 minIndex \u4E3A\u5F53\u524D\u533A\u95F4\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
        minIndex <span class="token operator">=</span> i
        <span class="token comment">// i\u3001j\u5206\u522B\u5B9A\u4E49\u5F53\u524D\u533A\u95F4\u7684\u4E0A\u4E0B\u754C\uFF0Ci\u662F\u5DE6\u8FB9\u754C\uFF0Cj\u662F\u53F3\u8FB9\u754C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u82E5 j \u5904\u7684\u6570\u636E\u9879\u6BD4\u5F53\u524D\u6700\u5C0F\u503C\u8FD8\u8981\u5C0F\uFF0C\u5219\u66F4\u65B0\u6700\u5C0F\u503C\u7D22\u5F15\u4E3A j</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                minIndex <span class="token operator">=</span> j
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C minIndex \u5BF9\u5E94\u5143\u7D20\u4E0D\u662F\u76EE\u524D\u7684\u5934\u90E8\u5143\u7D20\uFF0C\u5219\u4EA4\u6362\u4E24\u8005</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>minIndex <span class="token operator">!==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">;</span><span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token comment">// console.log(quickSort([3, 6, 2, 4, 1]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="_15-\u63D2\u5165\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-n-2" tabindex="-1"><a class="header-anchor" href="#_15-\u63D2\u5165\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-n-2" aria-hidden="true">#</a> 15 \u63D2\u5165\u6392\u5E8F--\u65F6\u95F4\u590D\u6742\u5EA6 n^2</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u63D2\u5165\u6392\u5E8F</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> j <span class="token operator">=</span> i
        <span class="token keyword">let</span> target <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
            j<span class="token operator">--</span>
        <span class="token punctuation">}</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> target
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token comment">// console.log(insertSort([3, 6, 2, 4, 1]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_16-\u5FEB\u6392-\u65F6\u95F4\u590D\u6742\u5EA6-nlogn-n-2-\u4E4B\u95F4" tabindex="-1"><a class="header-anchor" href="#_16-\u5FEB\u6392-\u65F6\u95F4\u590D\u6742\u5EA6-nlogn-n-2-\u4E4B\u95F4" aria-hidden="true">#</a> 16 \u5FEB\u6392--\u65F6\u95F4\u590D\u6742\u5EA6 nlogn~ n^2 \u4E4B\u95F4</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u5FEB\u6392</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> cur <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> left <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v <span class="token operator">&lt;=</span> cur <span class="token operator">&amp;&amp;</span> i <span class="token operator">!==</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v <span class="token operator">&gt;</span> cur<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> cur<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// console.log(quickSort([3, 6, 2, 4, 1]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="_17-\u5F52\u5E76\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-nlog-n" tabindex="-1"><a class="header-anchor" href="#_17-\u5F52\u5E76\u6392\u5E8F-\u65F6\u95F4\u590D\u6742\u5EA6-nlog-n" aria-hidden="true">#</a> 17 \u5F52\u5E76\u6392\u5E8F--\u65F6\u95F4\u590D\u6742\u5EA6 nlog(n)</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A nlog(n)\u7684\u6392\u5E8F\u7B97\u6CD5</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> right<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            i<span class="token operator">++</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
            j<span class="token operator">++</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>left<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>right<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// console.log(mergeSort([3, 6, 2, 4, 1]));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h4 id="_18-\u4E8C\u5206\u67E5\u627E-\u65F6\u95F4\u590D\u6742\u5EA6-log2-n" tabindex="-1"><a class="header-anchor" href="#_18-\u4E8C\u5206\u67E5\u627E-\u65F6\u95F4\u590D\u6742\u5EA6-log2-n" aria-hidden="true">#</a> 18 \u4E8C\u5206\u67E5\u627E--\u65F6\u95F4\u590D\u6742\u5EA6 log2(n)</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5982\u4F55\u786E\u5B9A\u4E00\u4E2A\u6570\u5728\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> target<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> targetIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>

    <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>start <span class="token operator">+</span> end<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        targetIndex <span class="token operator">=</span> mid
        <span class="token keyword">return</span> targetIndex
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> targetIndex
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> target<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> target<span class="token punctuation">,</span> start<span class="token punctuation">,</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// const dataArr = [1, 2, 3, 4, 5, 6, 7, 8, 9];</span>
<span class="token comment">// const position = search(dataArr, 6, 0, dataArr.length - 1);</span>
<span class="token comment">// if (position !== -1) {</span>
<span class="token comment">//   console.log(\`\u76EE\u6807\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E:\${position}\`);</span>
<span class="token comment">// } else {</span>
<span class="token comment">//   console.log(&quot;\u76EE\u6807\u5143\u7D20\u4E0D\u5728\u6570\u7EC4\u4E2D&quot;);</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h4 id="_19-\u5B9E\u73B0-lazyman" tabindex="-1"><a class="header-anchor" href="#_19-\u5B9E\u73B0-lazyman" aria-hidden="true">#</a> 19 \u5B9E\u73B0 LazyMan</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5B9E\u73B0\u4E00\u4E2ALazyMan\uFF0C\u53EF\u4EE5\u6309\u7167\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528:
LazyMan(\u201CHank\u201D)\u8F93\u51FA:
Hi! This is Hank!

LazyMan(\u201CHank\u201D).sleep(10).eat(\u201Cdinner\u201D)\u8F93\u51FA
Hi! This is Hank!
//\u7B49\u5F8510\u79D2..
Wake up after 10
Eat dinner~

LazyMan(\u201CHank\u201D).eat(\u201Cdinner\u201D).eat(\u201Csupper\u201D)\u8F93\u51FA
Hi This is Hank!
Eat dinner~
Eat supper~

LazyMan(\u201CHank\u201D).eat(\u201Csupper\u201D).sleepFirst(5)\u8F93\u51FA
//\u7B49\u5F855\u79D2
Wake up after 5
Hi This is Hank!
Eat supper

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">_LazyMan</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">const</span> <span class="token function-variable function">task</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hi! This is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u628A this.next() \u653E\u5230\u8C03\u7528\u6808\u6E05\u7A7A\u4E4B\u540E\u6267\u884C</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> task <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tasks<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u53D6\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C</span>
        task <span class="token operator">&amp;&amp;</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_sleepWrapper</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span> <span class="token comment">// \u94FE\u5F0F\u8C03\u7528</span>
    <span class="token punctuation">}</span>
    <span class="token function">sleepFirst</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_sleepWrapper</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
    <span class="token function">_sleepWrapper</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> first</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">task</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Wake up after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> time <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>tasks<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span> <span class="token comment">// \u653E\u5230\u4EFB\u52A1\u961F\u5217\u9876\u90E8</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span> <span class="token comment">// \u653E\u5230\u4EFB\u52A1\u961F\u5217\u5C3E\u90E8</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">eat</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">task</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Eat </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_LazyMan</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h4 id="_20-\u9632\u6296\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#_20-\u9632\u6296\u8282\u6D41" aria-hidden="true">#</a> 20 \u9632\u6296\u8282\u6D41</h4><p>\u9898\u76EE\u63CF\u8FF0:\u624B\u5199\u9632\u6296\u8282\u6D41</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9632\u6296</span>
<span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay <span class="token operator">=</span> <span class="token number">300</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u9ED8\u8BA4300\u6BEB\u79D2</span>
    <span class="token keyword">let</span> timer
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> args <span class="token operator">=</span> arguments
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token comment">// \u6539\u53D8this\u6307\u5411\u4E3A\u8C03\u7528debounce\u6240\u6307\u7684\u5BF9\u8C61</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
    <span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span>
    <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u8282\u6D41</span>
<span class="token comment">// \u8BBE\u7F6E\u4E00\u4E2A\u6807\u5FD7</span>
<span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token keyword">return</span>
        flag <span class="token operator">=</span> <span class="token boolean">false</span>
        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            flag <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
    <span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span>
    <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h4 id="_21-\u5199\u7248\u672C\u53F7\u6392\u5E8F\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_21-\u5199\u7248\u672C\u53F7\u6392\u5E8F\u7684\u65B9\u6CD5" aria-hidden="true">#</a> 21 \u5199\u7248\u672C\u53F7\u6392\u5E8F\u7684\u65B9\u6CD5</h4><p>\u9898\u76EE\u63CF\u8FF0:\u6709\u4E00\u7EC4\u7248\u672C\u53F7\u5982\u4E0B[&#39;0.1.1&#39;, &#39;2.3.3&#39;, &#39;0.302.1&#39;, &#39;4.2&#39;, &#39;4.3.5&#39;, &#39;4.3.4.5&#39;]\u3002\u73B0\u5728\u9700\u8981\u5BF9\u5176\u8FDB\u884C\u6392\u5E8F\uFF0C\u6392\u5E8F\u7684\u7ED3\u679C\u4E3A [&#39;4.3.5&#39;,&#39;4.3.4.5&#39;,&#39;2.3.3&#39;,&#39;0.302.1&#39;,&#39;0.1.1&#39;]</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> arr1 <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> arr2 <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> s1 <span class="token operator">=</span> arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">const</span> s2 <span class="token operator">=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        i<span class="token operator">++</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s1 <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> s2 <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> arr2<span class="token punctuation">.</span>length <span class="token operator">-</span> arr1<span class="token punctuation">.</span>length
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>s1 <span class="token operator">===</span> s2<span class="token punctuation">)</span> <span class="token keyword">continue</span>

        <span class="token keyword">return</span> s2 <span class="token operator">-</span> s1
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="_22-lru-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_22-lru-\u7B97\u6CD5" aria-hidden="true">#</a> 22 LRU \u7B97\u6CD5</h4><p>\u9898\u76EE\u63CF\u8FF0: <img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e57b38ac1234cf4b1fd926917ab6ae7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1956:0:0:0.image" alt="LRU\u9898\u76EE.png"></p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  \u4E00\u4E2AMap\u5BF9\u8C61\u5728\u8FED\u4EE3\u65F6\u4F1A\u6839\u636E\u5BF9\u8C61\u4E2D\u5143\u7D20\u7684\u63D2\u5165\u987A\u5E8F\u6765\u8FDB\u884C</span>
<span class="token comment">// \u65B0\u6DFB\u52A0\u7684\u5143\u7D20\u4F1A\u88AB\u63D2\u5165\u5230map\u7684\u672B\u5C3E\uFF0C\u6574\u4E2A\u6808\u5012\u5E8F\u67E5\u770B</span>
<span class="token keyword">class</span> <span class="token class-name">LRUCache</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">capacity</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>capacity <span class="token operator">=</span> capacity
    <span class="token punctuation">}</span>
    <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> tempValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> tempValue<span class="token punctuation">)</span>
            <span class="token keyword">return</span> tempValue
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// key\u5B58\u5728\uFF0C\u4EC5\u4FEE\u6539\u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// key\u4E0D\u5B58\u5728\uFF0Ccache\u672A\u6EE1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span>size <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6DFB\u52A0\u65B0key\uFF0C\u5220\u9664\u65E7key</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
            <span class="token comment">// \u5220\u9664map\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5373\u4E3A\u6700\u957F\u672A\u4F7F\u7528\u7684</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>secretKey<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// let cache = new LRUCache(2);</span>
<span class="token comment">// cache.put(1, 1);</span>
<span class="token comment">// cache.put(2, 2);</span>
<span class="token comment">// console.log(&quot;cache.get(1)&quot;, cache.get(1))// \u8FD4\u56DE  1</span>
<span class="token comment">// cache.put(3, 3);// \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 2 \u4F5C\u5E9F</span>
<span class="token comment">// console.log(&quot;cache.get(2)&quot;, cache.get(2))// \u8FD4\u56DE -1 (\u672A\u627E\u5230)</span>
<span class="token comment">// cache.put(4, 4);// \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 1 \u4F5C\u5E9F</span>
<span class="token comment">// console.log(&quot;cache.get(1)&quot;, cache.get(1))// \u8FD4\u56DE -1 (\u672A\u627E\u5230)</span>
<span class="token comment">// console.log(&quot;cache.get(3)&quot;, cache.get(3))// \u8FD4\u56DE  3</span>
<span class="token comment">// console.log(&quot;cache.get(4)&quot;, cache.get(4))// \u8FD4\u56DE  4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h4 id="_23-promise-\u4EE5\u53CA\u76F8\u5173\u65B9\u6CD5\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_23-promise-\u4EE5\u53CA\u76F8\u5173\u65B9\u6CD5\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 23 Promise \u4EE5\u53CA\u76F8\u5173\u65B9\u6CD5\u7684\u5B9E\u73B0</h4><p>\u9898\u76EE\u63CF\u8FF0:\u624B\u5199 Promise \u4EE5\u53CA Promise.all Promise.race \u7684\u5B9E\u73B0</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Mypromise</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8868\u793A\u72B6\u6001</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
        <span class="token comment">// \u8868\u793Athen\u6CE8\u518C\u7684\u6210\u529F\u51FD\u6570</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>successFun <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token comment">// \u8868\u793Athen\u6CE8\u518C\u7684\u5931\u8D25\u51FD\u6570</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failFun <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

        <span class="token keyword">let</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4FDD\u6301\u72B6\u6001\u6539\u53D8\u4E0D\u53EF\u53D8\uFF08resolve\u548Creject\u53EA\u51C6\u89E6\u53D1\u4E00\u79CD\uFF09</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">!==</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

            <span class="token comment">// \u6210\u529F\u89E6\u53D1\u65F6\u673A  \u6539\u53D8\u72B6\u6001 \u540C\u65F6\u6267\u884C\u5728then\u6CE8\u518C\u7684\u56DE\u8C03\u4E8B\u4EF6</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;success&#39;</span>
            <span class="token comment">// \u4E3A\u4E86\u4FDD\u8BC1then\u4E8B\u4EF6\u5148\u6CE8\u518C\uFF08\u4E3B\u8981\u662F\u8003\u8651\u5728promise\u91CC\u9762\u5199\u540C\u6B65\u4EE3\u7801\uFF09 promise\u89C4\u8303 \u8FD9\u91CC\u4E3A\u6A21\u62DF\u5F02\u6B65</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6267\u884C\u5F53\u524D\u4E8B\u4EF6\u91CC\u9762\u6240\u6709\u7684\u6CE8\u518C\u51FD\u6570</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>successFun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">item</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">let</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">!==</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
            <span class="token comment">// \u5931\u8D25\u89E6\u53D1\u65F6\u673A  \u6539\u53D8\u72B6\u6001 \u540C\u65F6\u6267\u884C\u5728then\u6CE8\u518C\u7684\u56DE\u8C03\u4E8B\u4EF6</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;fail&#39;</span>
            <span class="token comment">// \u4E3A\u4E86\u4FDD\u8BC1then\u4E8B\u4EF6\u5148\u6CE8\u518C\uFF08\u4E3B\u8981\u662F\u8003\u8651\u5728promise\u91CC\u9762\u5199\u540C\u6B65\u4EE3\u7801\uFF09 promise\u89C4\u8303 \u8FD9\u91CC\u6A21\u62DF\u5F02\u6B65</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>failFun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">item</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8C03\u7528\u51FD\u6570</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5B9E\u4F8B\u65B9\u6CD5 then</span>

    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u56DE\u8C03\u662F\u5426\u662F\u51FD\u6570</span>
        resolveCallback <span class="token operator">=</span>
            <span class="token keyword">typeof</span> resolveCallback <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v <span class="token operator">:</span> resolveCallback
        rejectCallback <span class="token operator">=</span>
            <span class="token keyword">typeof</span> rejectCallback <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span>
                <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                      <span class="token keyword">throw</span> err
                  <span class="token punctuation">}</span>
                <span class="token operator">:</span> rejectCallback
        <span class="token comment">// \u4E3A\u4E86\u4FDD\u6301\u94FE\u5F0F\u8C03\u7528  \u7EE7\u7EED\u8FD4\u56DEpromise</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Mypromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5C06\u56DE\u8C03\u6CE8\u518C\u5230successFun\u4E8B\u4EF6\u96C6\u5408\u91CC\u9762\u53BB</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>successFun<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">//    \u6267\u884C\u56DE\u8C03\u51FD\u6570</span>
                    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                    <span class="token comment">//\uFF08\u6700\u96BE\u7684\u4E00\u70B9\uFF09</span>
                    <span class="token comment">// \u5982\u679C\u56DE\u8C03\u51FD\u6570\u7ED3\u679C\u662F\u666E\u901A\u503C \u90A3\u4E48\u5C31resolve\u51FA\u53BB\u7ED9\u4E0B\u4E00\u4E2Athen\u94FE\u5F0F\u8C03\u7528  \u5982\u679C\u662F\u4E00\u4E2Apromise\u5BF9\u8C61\uFF08\u4EE3\u8868\u53C8\u662F\u4E00\u4E2A\u5F02\u6B65\uFF09 \u90A3\u4E48\u8C03\u7528x\u7684then\u65B9\u6CD5 \u5C06resolve\u548Creject\u4F20\u8FDB\u53BB \u7B49\u5230x\u5185\u90E8\u7684\u5F02\u6B65 \u6267\u884C\u5B8C\u6BD5\u7684\u65F6\u5019\uFF08\u72B6\u6001\u5B8C\u6210\uFF09\u5C31\u4F1A\u81EA\u52A8\u6267\u884C\u4F20\u5165\u7684resolve \u8FD9\u6837\u5C31\u63A7\u5236\u4E86\u94FE\u5F0F\u8C03\u7528\u7684\u987A\u5E8F</span>
                    x <span class="token keyword">instanceof</span> <span class="token class-name">Mypromise</span>
                        <span class="token operator">?</span> x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                        <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>failFun<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">//    \u6267\u884C\u56DE\u8C03\u51FD\u6570</span>
                    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                    x <span class="token keyword">instanceof</span> <span class="token class-name">Mypromise</span> <span class="token operator">?</span> x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u9759\u6001\u65B9\u6CD5</span>
    <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">promiseArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token comment">//\u58F0\u660E\u4E00\u4E2A\u8BA1\u6570\u5668 \u6BCF\u4E00\u4E2Apromise\u8FD4\u56DE\u5C31\u52A0\u4E00</span>
        <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Mypromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u8FD9\u91CC\u7528 Promise.resolve\u5305\u88C5\u4E00\u4E0B \u9632\u6B62\u4E0D\u662FPromise\u7C7B\u578B\u4F20\u8FDB\u6765</span>
                Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promiseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                    <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u8FD9\u91CC\u4E0D\u80FD\u76F4\u63A5push\u6570\u7EC4  \u56E0\u4E3A\u8981\u63A7\u5236\u987A\u5E8F\u4E00\u4E00\u5BF9\u5E94(\u611F\u8C22\u8BC4\u8BBA\u533A\u6307\u6B63)</span>
                        result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> res
                        count<span class="token operator">++</span>
                        <span class="token comment">//\u53EA\u6709\u5168\u90E8\u7684promise\u6267\u884C\u6210\u529F\u4E4B\u540E\u624Dresolve\u51FA\u53BB</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u9759\u6001\u65B9\u6CD5</span>
    <span class="token keyword">static</span> <span class="token function">race</span><span class="token punctuation">(</span><span class="token parameter">promiseArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Mypromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promiseArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promiseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                    <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">//promise\u6570\u7EC4\u53EA\u8981\u6709\u4EFB\u4F55\u4E00\u4E2Apromise \u72B6\u6001\u53D8\u66F4  \u5C31\u53EF\u4EE5\u8FD4\u56DE</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528</span>
<span class="token comment">// let promise1 = new Mypromise((resolve, reject) =&gt; {</span>
<span class="token comment">//   setTimeout(() =&gt; {</span>
<span class="token comment">//     resolve(123);</span>
<span class="token comment">//   }, 2000);</span>
<span class="token comment">// });</span>
<span class="token comment">// let promise2 = new Mypromise((resolve, reject) =&gt; {</span>
<span class="token comment">//   setTimeout(() =&gt; {</span>
<span class="token comment">//     resolve(1234);</span>
<span class="token comment">//   }, 1000);</span>
<span class="token comment">// });</span>

<span class="token comment">// Mypromise.all([promise1,promise2]).then(res=&gt;{</span>
<span class="token comment">//   console.log(res);</span>
<span class="token comment">// })</span>

<span class="token comment">// Mypromise.race([promise1, promise2]).then(res =&gt; {</span>
<span class="token comment">//   console.log(res);</span>
<span class="token comment">// });</span>

<span class="token comment">// promise1</span>
<span class="token comment">//   .then(</span>
<span class="token comment">//     res =&gt; {</span>
<span class="token comment">//       console.log(res); //\u8FC7\u4E24\u79D2\u8F93\u51FA123</span>
<span class="token comment">//       return new Mypromise((resolve, reject) =&gt; {</span>
<span class="token comment">//         setTimeout(() =&gt; {</span>
<span class="token comment">//           resolve(&quot;success&quot;);</span>
<span class="token comment">//         }, 1000);</span>
<span class="token comment">//       });</span>
<span class="token comment">//     },</span>
<span class="token comment">//     err =&gt; {</span>
<span class="token comment">//       console.log(err);</span>
<span class="token comment">//     }</span>
<span class="token comment">//   )</span>
<span class="token comment">//   .then(</span>
<span class="token comment">//     res =&gt; {</span>
<span class="token comment">//       console.log(res); //\u518D\u8FC7\u4E00\u79D2\u8F93\u51FAsuccess</span>
<span class="token comment">//     },</span>
<span class="token comment">//     err =&gt; {</span>
<span class="token comment">//       console.log(err);</span>
<span class="token comment">//     }</span>
<span class="token comment">//   );</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br></div></div><blockquote><p>\u6269\u5C55\u601D\u8003:\u5982\u4F55\u53D6\u6D88 promise</p></blockquote><p>Promise.race()\u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u7ADE\u4E89 Promise \u53EF\u4EE5\u501F\u52A9\u8FD9\u4E2A\u7279\u6027 \u81EA\u5DF1\u5305\u88C5\u4E00\u4E2A \u7A7A\u7684 Promise \u4E0E\u8981\u53D1\u8D77\u7684 Promise \u6765\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token parameter">pro</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u6784\u9020\u4E00\u4E2A\u65B0\u7684promise\u7528\u6765\u7ADE\u4E89</span>
    <span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve
        obj<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    obj<span class="token punctuation">.</span>promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> pro<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>

<span class="token keyword">let</span> testPro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> wrapPro <span class="token operator">=</span> <span class="token function">wrap</span><span class="token punctuation">(</span>testPro<span class="token punctuation">)</span>
wrapPro<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
wrapPro<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u88AB\u62E6\u622A\u4E86&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="_24-\u5B9E\u73B0\u4E00\u4E2A-add-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_24-\u5B9E\u73B0\u4E00\u4E2A-add-\u65B9\u6CD5" aria-hidden="true">#</a> 24 \u5B9E\u73B0\u4E00\u4E2A add \u65B9\u6CD5</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A add \u65B9\u6CD5 \u4F7F\u8BA1\u7B97\u7ED3\u679C\u80FD\u591F\u6EE1\u8DB3\u5982\u4E0B\u9884\u671F\uFF1A add(1)(2)(3)()=6 add(1,2,3)(4)()=10</p><p>\u5176\u5B9E\u5C31\u662F\u8003\u51FD\u6570\u67EF\u91CC\u5316</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> allArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">]</span>
    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>newArgs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        allArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>allArgs<span class="token punctuation">,</span> <span class="token operator">...</span>newArgs<span class="token punctuation">]</span>
        <span class="token keyword">return</span> fn
    <span class="token punctuation">}</span>
    fn<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allArgs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> allArgs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+</span> cur<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> fn
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_25-\u52A8\u6001\u89C4\u5212\u6C42\u89E3\u786C\u5E01\u627E\u96F6\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_25-\u52A8\u6001\u89C4\u5212\u6C42\u89E3\u786C\u5E01\u627E\u96F6\u95EE\u9898" aria-hidden="true">#</a> 25 \u52A8\u6001\u89C4\u5212\u6C42\u89E3\u786C\u5E01\u627E\u96F6\u95EE\u9898</h4><p>\u9898\u76EE\u63CF\u8FF0:\u7ED9\u5B9A\u4E0D\u540C\u9762\u989D\u7684\u786C\u5E01 coins \u548C\u4E00\u4E2A\u603B\u91D1\u989D amount\u3002\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u8BA1\u7B97\u53EF\u4EE5\u51D1\u6210\u603B\u91D1\u989D\u6240\u9700\u7684\u6700\u5C11\u7684\u786C\u5E01\u4E2A\u6570\u3002\u5982\u679C\u6CA1\u6709\u4EFB\u4F55\u4E00\u79CD\u786C\u5E01\u7EC4\u5408\u80FD\u7EC4\u6210\u603B\u91D1\u989D\uFF0C\u8FD4\u56DE -1</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u793A\u4F8B1\uFF1A
\u8F93\u5165: coins = [1, 2, 5], amount = 11
\u8F93\u51FA: 3
\u89E3\u91CA: 11 = 5 + 5 + 1

\u793A\u4F8B2\uFF1A
\u8F93\u5165: coins = [2], amount = 3
\u8F93\u51FA: -1

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">coinChange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">coins<span class="token punctuation">,</span> amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7528\u4E8E\u4FDD\u5B58\u6BCF\u4E2A\u76EE\u6807\u603B\u989D\u5BF9\u5E94\u7684\u6700\u5C0F\u786C\u5E01\u4E2A\u6570</span>
    <span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u63D0\u524D\u5B9A\u4E49\u5DF2\u77E5\u60C5\u51B5</span>
    f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// \u904D\u5386 [1, amount] \u8FD9\u4E2A\u533A\u95F4\u7684\u786C\u5E01\u603B\u989D</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> amount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6C42\u7684\u662F\u6700\u5C0F\u503C\uFF0C\u56E0\u6B64\u6211\u4EEC\u9884\u8BBE\u4E3A\u65E0\u7A77\u5927\uFF0C\u786E\u4FDD\u5B83\u4E00\u5B9A\u4F1A\u88AB\u66F4\u5C0F\u7684\u6570\u66F4\u65B0</span>
        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">Infinity</span>
        <span class="token comment">// \u5FAA\u73AF\u904D\u5386\u6BCF\u4E2A\u53EF\u7528\u786C\u5E01\u7684\u9762\u989D</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> coins<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u82E5\u786C\u5E01\u9762\u989D\u5C0F\u4E8E\u76EE\u6807\u603B\u989D\uFF0C\u5219\u95EE\u9898\u6210\u7ACB</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> coins<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B</span>
                f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> coins<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u82E5\u76EE\u6807\u603B\u989D\u5BF9\u5E94\u7684\u89E3\u4E3A\u65E0\u7A77\u5927\uFF0C\u5219\u610F\u5473\u7740\u6CA1\u6709\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u786C\u5E01\u603B\u6570\u6765\u66F4\u65B0\u5B83\uFF0C\u672C\u9898\u65E0\u89E3\uFF0C\u8FD4\u56DE-1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">Infinity</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u82E5\u6709\u89E3\uFF0C\u76F4\u63A5\u8FD4\u56DE\u89E3\u7684\u5185\u5BB9</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>amount<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="_26-\u8BF7\u5B9E\u73B0-dom2json-\u4E00\u4E2A\u51FD\u6570-\u53EF\u4EE5\u628A\u4E00\u4E2A-dom-\u8282\u70B9\u8F93\u51FA-json-\u7684\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#_26-\u8BF7\u5B9E\u73B0-dom2json-\u4E00\u4E2A\u51FD\u6570-\u53EF\u4EE5\u628A\u4E00\u4E2A-dom-\u8282\u70B9\u8F93\u51FA-json-\u7684\u683C\u5F0F" aria-hidden="true">#</a> 26 \u8BF7\u5B9E\u73B0 DOM2JSON \u4E00\u4E2A\u51FD\u6570\uFF0C\u53EF\u4EE5\u628A\u4E00\u4E2A DOM \u8282\u70B9\u8F93\u51FA JSON \u7684\u683C\u5F0F</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;div&gt;
  &lt;span&gt;
    &lt;a&gt;&lt;/a&gt;
  &lt;/span&gt;
  &lt;span&gt;
    &lt;a&gt;&lt;/a&gt;
    &lt;a&gt;&lt;/a&gt;
  &lt;/span&gt;
&lt;/div&gt;

\u628A\u4E0A\u8BC9dom\u7ED3\u6784\u8F6C\u6210\u4E0B\u9762\u7684JSON\u683C\u5F0F

{
  tag: &#39;DIV&#39;,
  children: [
    {
      tag: &#39;SPAN&#39;,
      children: [
        { tag: &#39;A&#39;, children: [] }
      ]
    },
    {
      tag: &#39;SPAN&#39;,
      children: [
        { tag: &#39;A&#39;, children: [] },
        { tag: &#39;A&#39;, children: [] }
      ]
    }
  ]
}

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dom2Json</span><span class="token punctuation">(</span><span class="token parameter">domtree</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    obj<span class="token punctuation">.</span>name <span class="token operator">=</span> domtree<span class="token punctuation">.</span>tagName
    obj<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    domtree<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> obj<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">dom2Json</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u6269\u5C55\u601D\u8003:\u5982\u679C\u7ED9\u5B9A\u7684\u4E0D\u662F\u4E00\u4E2A Dom \u6811\u7ED3\u6784 \u800C\u662F\u4E00\u6BB5 html \u5B57\u7B26\u4E32 \u8BE5\u5982\u4F55\u89E3\u6790?</p></blockquote>`,122),j=s("\u90A3\u4E48\u8FD9\u4E2A\u95EE\u9898\u5C31\u7C7B\u4F3C Vue \u7684\u6A21\u677F\u7F16\u8BD1\u539F\u7406 \u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u6B63\u5219 \u5339\u914D html \u5B57\u7B26\u4E32 \u9047\u5230\u5F00\u59CB\u6807\u7B7E \u7ED3\u675F\u6807\u7B7E\u548C\u6587\u672C \u89E3\u6790\u5B8C\u6BD5\u4E4B\u540E\u751F\u6210\u5BF9\u5E94\u7684 ast \u5E76\u5EFA\u7ACB\u76F8\u5E94\u7684\u7236\u5B50\u5173\u8054 \u4E0D\u65AD\u7684 advance \u622A\u53D6\u5269\u4F59\u7684\u5B57\u7B26\u4E32 \u76F4\u5230 html \u5168\u90E8\u89E3\u6790\u5B8C\u6BD5 \u611F\u5174\u8DA3\u7684\u53EF\u4EE5\u770B"),x={href:"https://juejin.cn/post/6936024530016010276",title:"https://juejin.cn/post/6936024530016010276",target:"_blank",rel:"noopener noreferrer"},_=s("\u8FD9\u91CC"),q=t(`<h4 id="_27-\u7C7B\u6570\u7EC4\u8F6C\u5316\u4E3A\u6570\u7EC4\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_27-\u7C7B\u6570\u7EC4\u8F6C\u5316\u4E3A\u6570\u7EC4\u7684\u65B9\u6CD5" aria-hidden="true">#</a> 27 \u7C7B\u6570\u7EC4\u8F6C\u5316\u4E3A\u6570\u7EC4\u7684\u65B9\u6CD5</h4><p>\u9898\u76EE\u63CF\u8FF0:\u7C7B\u6570\u7EC4\u62E5\u6709 length \u5C5E\u6027 \u53EF\u4EE5\u4F7F\u7528\u4E0B\u6807\u6765\u8BBF\u95EE\u5143\u7D20 \u4F46\u662F\u4E0D\u80FD\u4F7F\u7528\u6570\u7EC4\u7684\u65B9\u6CD5 \u5982\u4F55\u628A\u7C7B\u6570\u7EC4\u8F6C\u5316\u4E3A\u6570\u7EC4?</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayLike<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 1.\u6269\u5C55\u8FD0\u7B97\u7B26</span>
<span class="token punctuation">[</span><span class="token operator">...</span>arrayLike<span class="token punctuation">]</span>
<span class="token comment">// 2.Array.from</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span>
<span class="token comment">// 3.Array.prototype.slice</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span>
<span class="token comment">// 4.Array.apply</span>
<span class="token function">Array</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arrayLike<span class="token punctuation">)</span>
<span class="token comment">// 5.Array.prototype.concat</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arrayLike<span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_28-object-is-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_28-object-is-\u5B9E\u73B0" aria-hidden="true">#</a> 28 Object.is \u5B9E\u73B0</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span>is\u4E0D\u4F1A\u8F6C\u6362\u88AB\u6BD4\u8F83\u7684\u4E24\u4E2A\u503C\u7684\u7C7B\u578B\uFF0C\u8FD9\u70B9\u548C<span class="token operator">===</span>\u66F4\u4E3A\u76F8\u4F3C\uFF0C\u4ED6\u4EEC\u4E4B\u95F4\u4E5F\u5B58\u5728\u4E00\u4E9B\u533A\u522B\u3002
    <span class="token number">1.</span> <span class="token number">NaN</span>\u5728<span class="token operator">===</span>\u4E2D\u662F\u4E0D\u76F8\u7B49\u7684\uFF0C\u800C\u5728Object<span class="token punctuation">.</span>is\u4E2D\u662F\u76F8\u7B49\u7684
    <span class="token number">2.</span> <span class="token operator">+</span><span class="token number">0</span>\u548C<span class="token operator">-</span><span class="token number">0</span>\u5728<span class="token operator">===</span>\u4E2D\u662F\u76F8\u7B49\u7684\uFF0C\u800C\u5728Object<span class="token punctuation">.</span>is\u4E2D\u662F\u4E0D\u76F8\u7B49\u7684

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function-variable function">is</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F53\u524D\u60C5\u51B5\u4E0B\uFF0C\u53EA\u6709\u4E00\u79CD\u60C5\u51B5\u662F\u7279\u6B8A\u7684\uFF0C\u5373 +0 -0</span>
        <span class="token comment">// \u5982\u679C x !== 0\uFF0C\u5219\u8FD4\u56DEtrue</span>
        <span class="token comment">// \u5982\u679C x === 0\uFF0C\u5219\u9700\u8981\u5224\u65AD+0\u548C-0\uFF0C\u5219\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 1/+0 === Infinity \u548C 1/-0 === -Infinity\u6765\u8FDB\u884C\u5224\u65AD</span>
        <span class="token keyword">return</span> x <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">1</span> <span class="token operator">/</span> x <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">/</span> y
    <span class="token punctuation">}</span>

    <span class="token comment">// x !== y \u7684\u60C5\u51B5\u4E0B\uFF0C\u53EA\u9700\u8981\u5224\u65AD\u662F\u5426\u4E3ANaN\uFF0C\u5982\u679Cx!==x\uFF0C\u5219\u8BF4\u660Ex\u662FNaN\uFF0C\u540C\u7406y\u4E5F\u4E00\u6837</span>
    <span class="token comment">// x\u548Cy\u540C\u65F6\u4E3ANaN\u65F6\uFF0C\u8FD4\u56DEtrue</span>
    <span class="token keyword">return</span> x <span class="token operator">!==</span> x <span class="token operator">&amp;&amp;</span> y <span class="token operator">!==</span> y
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_29-ajax" tabindex="-1"><a class="header-anchor" href="#_29-ajax" aria-hidden="true">#</a> 29 AJAX</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5229\u7528 XMLHttpRequest \u624B\u5199 AJAX \u5B9E\u73B0</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getJSON</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">304</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="_30-\u5206\u7247\u601D\u60F3\u89E3\u51B3\u5927\u6570\u636E\u91CF\u6E32\u67D3\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_30-\u5206\u7247\u601D\u60F3\u89E3\u51B3\u5927\u6570\u636E\u91CF\u6E32\u67D3\u95EE\u9898" aria-hidden="true">#</a> 30 \u5206\u7247\u601D\u60F3\u89E3\u51B3\u5927\u6570\u636E\u91CF\u6E32\u67D3\u95EE\u9898</h4><p>\u9898\u76EE\u63CF\u8FF0:\u6E32\u67D3\u767E\u4E07\u6761\u7ED3\u6784\u7B80\u5355\u7684\u5927\u6570\u636E\u65F6 \u600E\u4E48\u4F7F\u7528\u5206\u7247\u601D\u60F3\u4F18\u5316\u6E32\u67D3</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;container&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u63D2\u5165\u5341\u4E07\u6761\u6570\u636E</span>
<span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">100000</span>
<span class="token comment">// \u4E00\u6B21\u63D2\u5165 20 \u6761</span>
<span class="token keyword">let</span> once <span class="token operator">=</span> <span class="token number">20</span>
<span class="token comment">//\u603B\u9875\u6570</span>
<span class="token keyword">let</span> page <span class="token operator">=</span> total <span class="token operator">/</span> once
<span class="token comment">//\u6BCF\u6761\u8BB0\u5F55\u7684\u7D22\u5F15</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
<span class="token comment">//\u5FAA\u73AF\u52A0\u8F7D\u6570\u636E</span>
<span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token parameter">curTotal<span class="token punctuation">,</span> curIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curTotal <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u6BCF\u9875\u591A\u5C11\u6761</span>
    <span class="token keyword">let</span> pageCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>curTotal<span class="token punctuation">,</span> once<span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pageCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span>
            li<span class="token punctuation">.</span>innerText <span class="token operator">=</span> curIndex <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39; : &#39;</span> <span class="token operator">+</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> total<span class="token punctuation">)</span>
            ul<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">loop</span><span class="token punctuation">(</span>curTotal <span class="token operator">-</span> pageCount<span class="token punctuation">,</span> curIndex <span class="token operator">+</span> pageCount<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">loop</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><blockquote><p>\u6269\u5C55\u601D\u8003\uFF1A\u5BF9\u4E8E\u5927\u6570\u636E\u91CF\u7684\u7B80\u5355 dom \u7ED3\u6784\u6E32\u67D3\u53EF\u4EE5\u7528\u5206\u7247\u601D\u60F3\u89E3\u51B3 \u5982\u679C\u662F\u590D\u6742\u7684 dom \u7ED3\u6784\u6E32\u67D3\u5982\u4F55\u5904\u7406\uFF1F</p></blockquote><p>\u8FD9\u65F6\u5019\u5C31\u9700\u8981\u4F7F\u7528\u865A\u62DF\u5217\u8868\u4E86 \u5927\u5BB6\u81EA\u884C\u767E\u5EA6\u54C8 \u865A\u62DF\u5217\u8868\u548C\u865A\u62DF\u8868\u683C\u5728\u65E5\u5E38\u9879\u76EE\u4F7F\u7528\u8FD8\u662F\u5F88\u9891\u7E41\u7684</p><h4 id="_31-\u5C06\u865A\u62DF-dom-\u8F6C\u5316\u4E3A\u771F\u5B9E-dom" tabindex="-1"><a class="header-anchor" href="#_31-\u5C06\u865A\u62DF-dom-\u8F6C\u5316\u4E3A\u771F\u5B9E-dom" aria-hidden="true">#</a> 31 \u5C06\u865A\u62DF Dom \u8F6C\u5316\u4E3A\u771F\u5B9E Dom</h4><p>\u9898\u76EE\u63CF\u8FF0:JSON \u683C\u5F0F\u7684\u865A\u62DF Dom \u600E\u4E48\u8F6C\u6362\u6210\u771F\u5B9E Dom</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;DIV&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">&#39;app&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;SPAN&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;SPAN&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
\u628A\u4E0A\u8BC9\u865A\u62DFDom\u8F6C\u5316\u6210\u4E0B\u65B9\u771F\u5B9EDom
<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u771F\u6B63\u7684\u6E32\u67D3\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">_render</span><span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u6570\u5B57\u7C7B\u578B\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vnode <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5B57\u7B26\u4E32\u7C7B\u578B\u76F4\u63A5\u5C31\u662F\u6587\u672C\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u666E\u901ADOM</span>
    <span class="token keyword">const</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386\u5C5E\u6027</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> value <span class="token operator">=</span> vnode<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            dom<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5B50\u6570\u7EC4\u8FDB\u884C\u9012\u5F52\u64CD\u4F5C</span>
    vnode<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dom<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">_render</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> dom
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="_32-\u5B9E\u73B0\u6A21\u677F\u5B57\u7B26\u4E32\u89E3\u6790\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#_32-\u5B9E\u73B0\u6A21\u677F\u5B57\u7B26\u4E32\u89E3\u6790\u529F\u80FD" aria-hidden="true">#</a> 32 \u5B9E\u73B0\u6A21\u677F\u5B57\u7B26\u4E32\u89E3\u6790\u529F\u80FD</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> template <span class="token operator">=</span> <span class="token string">&#39;\u6211\u662F{{name}}\uFF0C\u5E74\u9F84{{age}}\uFF0C\u6027\u522B{{sex}}&#39;</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u59D3\u540D&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token function">render</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token comment">// \u6211\u662F\u59D3\u540D\uFF0C\u5E74\u9F8418\uFF0C\u6027\u522Bundefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">template<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> computed <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{(\\w+)\\}\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">match<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> computed
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_33-\u5B9E\u73B0\u4E00\u4E2A\u5BF9\u8C61\u7684-flatten-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_33-\u5B9E\u73B0\u4E00\u4E2A\u5BF9\u8C61\u7684-flatten-\u65B9\u6CD5" aria-hidden="true">#</a> 33 \u5B9E\u73B0\u4E00\u4E2A\u5BF9\u8C61\u7684 flatten \u65B9\u6CD5</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">e</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>

<span class="token function">flatten</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> \u7ED3\u679C\u8FD4\u56DE\u5982\u4E0B
<span class="token comment">// {</span>
<span class="token comment">//  &#39;a.b&#39;: 1,</span>
<span class="token comment">//  &#39;a.c&#39;: 2,</span>
<span class="token comment">//  &#39;a.d.e&#39;: 5,</span>
<span class="token comment">//  &#39;b[0]&#39;: 1,</span>
<span class="token comment">//  &#39;b[1]&#39;: 3,</span>
<span class="token comment">//  &#39;b[2].a&#39;: 2,</span>
<span class="token comment">//  &#39;b[2].b&#39;: 3</span>
<span class="token comment">//   c: 3</span>
<span class="token comment">// }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> val <span class="token operator">!==</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cur<span class="token punctuation">,</span> prefix</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cur<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">in</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>cur<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>prefix <span class="token operator">?</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>prefix<span class="token punctuation">]</span> <span class="token operator">=</span> cur
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
<span class="token function">flatten</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="_34-\u5217\u8868\u8F6C\u6210\u6811\u5F62\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_34-\u5217\u8868\u8F6C\u6210\u6811\u5F62\u7ED3\u6784" aria-hidden="true">#</a> 34 \u5217\u8868\u8F6C\u6210\u6811\u5F62\u7ED3\u6784</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[
    {
        id: 1,
        text: &#39;\u8282\u70B91&#39;,
        parentId: 0 //\u8FD9\u91CC\u75280\u8868\u793A\u4E3A\u9876\u7EA7\u8282\u70B9
    },
    {
        id: 2,
        text: &#39;\u8282\u70B91_1&#39;,
        parentId: 1 //\u901A\u8FC7\u8FD9\u4E2A\u5B57\u6BB5\u6765\u786E\u5B9A\u5B50\u7236\u7EA7
    }
    ...
]

\u8F6C\u6210
[
    {
        id: 1,
        text: &#39;\u8282\u70B91&#39;,
        parentId: 0,
        children: [
            {
                id:2,
                text: &#39;\u8282\u70B91_1&#39;,
                parentId:1
            }
        ]
    }
]

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">listToTree</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> treeData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        temp<span class="token punctuation">[</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentId <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>temp<span class="token punctuation">[</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentId<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp<span class="token punctuation">[</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentId<span class="token punctuation">]</span><span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
            temp<span class="token punctuation">[</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentId<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            treeData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> treeData
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_35-\u6811\u5F62\u7ED3\u6784\u8F6C\u6210\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#_35-\u6811\u5F62\u7ED3\u6784\u8F6C\u6210\u5217\u8868" aria-hidden="true">#</a> 35 \u6811\u5F62\u7ED3\u6784\u8F6C\u6210\u5217\u8868</h4><p>\u9898\u76EE\u63CF\u8FF0:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[
    {
        id: 1,
        text: &#39;\u8282\u70B91&#39;,
        parentId: 0,
        children: [
            {
                id:2,
                text: &#39;\u8282\u70B91_1&#39;,
                parentId:1
            }
        ]
    }
]
\u8F6C\u6210
[
    {
        id: 1,
        text: &#39;\u8282\u70B91&#39;,
        parentId: 0 //\u8FD9\u91CC\u75280\u8868\u793A\u4E3A\u9876\u7EA7\u8282\u70B9
    },
    {
        id: 2,
        text: &#39;\u8282\u70B91_1&#39;,
        parentId: 1 //\u901A\u8FC7\u8FD9\u4E2A\u5B57\u6BB5\u6765\u786E\u5B9A\u5B50\u7236\u7EA7
    }
    ...
]


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeToList</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">tree</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">dfs</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
                <span class="token keyword">delete</span> item<span class="token punctuation">.</span>children
            <span class="token punctuation">}</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_36-\u5927\u6570\u76F8\u52A0" tabindex="-1"><a class="header-anchor" href="#_36-\u5927\u6570\u76F8\u52A0" aria-hidden="true">#</a> 36 \u5927\u6570\u76F8\u52A0</h4><p>\u9898\u76EE\u63CF\u8FF0:\u5B9E\u73B0\u4E00\u4E2A add \u65B9\u6CD5\u5B8C\u6210\u4E24\u4E2A\u5927\u6570\u76F8\u52A0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">&#39;9007199254740991&#39;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token string">&#39;1234567899999999999&#39;</span>

<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u53D6\u4E24\u4E2A\u6570\u5B57\u7684\u6700\u5927\u957F\u5EA6</span>
    <span class="token keyword">let</span> maxLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">,</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token comment">//\u75280\u53BB\u8865\u9F50\u957F\u5EA6</span>
    a <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span>maxLength<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//&quot;0009007199254740991&quot;</span>
    b <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span>maxLength<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//&quot;1234567899999999999&quot;</span>
    <span class="token comment">//\u5B9A\u4E49\u52A0\u6CD5\u8FC7\u7A0B\u4E2D\u9700\u8981\u7528\u5230\u7684\u53D8\u91CF</span>
    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">//&quot;\u8FDB\u4F4D&quot;</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> maxLength <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> f
        f <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span>
        sum <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> sum
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> f <span class="token operator">+</span> sum
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u9CA8\u9C7C\u54E5\u7684\u524D\u7AEF\u6478\u9C7C\u6280\u672F\u7FA4" tabindex="-1"><a class="header-anchor" href="#\u9CA8\u9C7C\u54E5\u7684\u524D\u7AEF\u6478\u9C7C\u6280\u672F\u7FA4" aria-hidden="true">#</a> \u9CA8\u9C7C\u54E5\u7684\u524D\u7AEF\u6478\u9C7C\u6280\u672F\u7FA4</h2>`,50),A=s("\u6B22\u8FCE\u5927\u5BB6\u6280\u672F\u4EA4\u6D41 \u5185\u63A8 \u6478\u9C7C \u6C42\u52A9\u7686\u53EF - "),S={href:"https://juejin.cn/pin/6968285391736537102",title:"https://juejin.cn/pin/6968285391736537102",target:"_blank",rel:"noopener noreferrer"},T=s("\u94FE\u63A5"),C=s("\u672C\u6587\u8F6C\u81EA "),I={href:"https://juejin.cn/post/6968713283884974088",target:"_blank",rel:"noopener noreferrer"},P=s("https://juejin.cn/post/6968713283884974088"),M=s("\uFF0C\u5982\u6709\u4FB5\u6743\uFF0C\u8BF7\u8054\u7CFB\u5220\u9664\u3002");function L(E,N){const a=e("ExternalLinkIcon");return o(),c(l,null,[i,k,n("p",null,[b,m,d,y,f,n("a",h,[g,p(a)]),w]),v,n("p",null,[j,n("a",x,[_,p(a)])]),q,n("p",null,[A,n("a",S,[T,p(a)])]),n("p",null,[C,n("a",I,[P,p(a)]),M])],64)}var H=u(r,[["render",L]]);export{H as default};

import{d as n}from"./app.b87228d2.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h3 id="_1\u3001\u6700\u957F\u516C\u5171\u524D\u7F00" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u6700\u957F\u516C\u5171\u524D\u7F00" aria-hidden="true">#</a> 1\u3001\u6700\u957F\u516C\u5171\u524D\u7F00</h3><p>\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u67E5\u627E\u5B57\u7B26\u4E32\u6570\u7EC4\u4E2D\u7684\u6700\u957F\u516C\u5171\u524D\u7F00\u3002\u5982\u679C\u4E0D\u5B58\u5728\u516C\u5171\u524D\u7F00\uFF0C\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32 &quot;&quot;\u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><p>\u8F93\u5165\uFF1A<code>strs = [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</code><br> \u8F93\u51FA\uFF1A<code>&quot;fl&quot;</code></p><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><p>\u8F93\u5165\uFF1A<code>strs = [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</code><br> \u8F93\u51FA\uFF1A<code>&quot;&quot;</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">var</span> <span class="token function-variable function">longestCommonPrefix</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">strs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> first <span class="token operator">=</span> strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> first<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7528\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u7B2C\u4E00\u4E2A\u5B57\u6BCD\u4E0E\u540E\u9762\u7684\u5B57\u7B26\u4E32\u4ECE\u5934\u5F00\u59CB\u9010\u4E2A\u6BD4\u5BF9</span>
        <span class="token keyword">let</span> char <span class="token operator">=</span> first<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u9047\u5230\u4E0D\u76F8\u540C\u7684\u5B57\u6BCD\u65F6\u6BD4\u5BF9\u7ED3\u675F\uFF0C\u8FD4\u56DE\u524D\u7F00</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>char <span class="token operator">!==</span> strs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> pre
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5F53\u4E00\u4E2A\u5B57\u6BCD\u901A\u8FC7\u6240\u6709\u6BD4\u5BF9\u540E\uFF0C\u6DFB\u52A0\u5230\u516C\u5171\u524D\u7F00\u4E2D</span>
        pre <span class="token operator">=</span> pre <span class="token operator">+</span> char
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pre
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,7);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
